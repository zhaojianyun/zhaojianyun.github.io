<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2023/07/12/test/"/>
    <url>/2023/07/12/test/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>yuketwoday</title>
    <link href="/2023/07/11/yuketwoday/"/>
    <url>/2023/07/11/yuketwoday/</url>
    
    <content type="html"><![CDATA[<h1 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h1><h1 id="1-传统写法"><a href="#1-传统写法" class="headerlink" title="1. 传统写法"></a>1. 传统写法</h1><blockquote><ol><li><p>查找员工的id,first_name以及部门的id,部门的name</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 错误的写法,造成数据的冗余 - 笛卡尔积<br>select e.id,e.first_name,d.id,d.name from s_emp e,s_dept d;<br><br>-- 传统的写法需要通过where来过滤冗余的数据<br>-- SQL - 结构化查询语言 - 非过程化的查询语言 - 面向过程的查询语言.<br>select e.id,e.first_name,d.id,d.name from s_emp e,s_dept d<br>where e.dept_id = d.id;<br><br>-- 碰到一个不会写的sql - 百度... - 答案是传统的写法.<br><br>-- 传统的写法弊端,如果涉及到的表比较多的话.可读性比较差<br>-- 不能够非常清晰看出来哪些表和哪些表之间是存在直接的关系的<br><br>-- 多表查询 - 思考:是任意两张表都是可以这样进行查询???<br>-- 能进行查询的表必然存在直接或者间接的关系的?<br><br>-- 表之间的关系是通过外键列进行维护的<br>-- s_emp(id,first_name,dept_id)<br>-- s_dept(id,name)<br><br>-- s_emp表中的dept_id就是外键列,它是对应s_dept中的主键列id的值的<br><br>-- 如何找到外键列 - 现阶段 - 外键列必然是存在于多的一方的.<br>-- 一个部门拥有多个员工,一个客户拥有多个订单<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>拓展:</p><p>表和表之间的关系</p><ol><li><p>one to one</p><p>user表</p><table><thead><tr><th>id</th><th>username</th><th>password</th><th></th></tr></thead><tbody><tr><td>1</td><td>admin</td><td>123</td><td></td></tr><tr><td>2</td><td>tom</td><td>456</td><td></td></tr></tbody></table><p>userInfo表</p><table><thead><tr><th>id</th><th>headerUrl</th><th>realName</th><th>sex</th><th>user_id</th></tr></thead><tbody><tr><td>1</td><td>xx.png</td><td>王宝强</td><td>M</td><td>2</td></tr><tr><td>2</td><td>x2.png</td><td>马蓉</td><td>F</td><td>1</td></tr></tbody></table><p><code>1:1表关系中,外键列是可以交给其中的任意一方维护的</code></p></li><li><p>one to many(70%)</p></li><li><p>many to many</p><p>一个学生可以选择多门课程,一门课程可以被多个学生来选</p><p>t_student</p><table><thead><tr><th>id</th><th>stuName</th><th></th></tr></thead><tbody><tr><td>1</td><td>james</td><td></td></tr><tr><td>2</td><td>gosling</td><td></td></tr></tbody></table><p>t_course</p><table><thead><tr><th>id</th><th>cname</th><th></th></tr></thead><tbody><tr><td>1</td><td>外语</td><td></td></tr><tr><td>2</td><td>java</td><td></td></tr><tr><td>3</td><td>python</td><td></td></tr><tr><td>4</td><td>vue</td><td></td></tr></tbody></table><p><code>遇到多对多的场景 - 需要拆分成俩个1:N</code></p><p>sc表 - 选课表</p><p>主键列 - 复合&#x2F;组合主键   (sid,cid)</p><table><thead><tr><th>sid</th><th>cid</th><th>score</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>100</td></tr><tr><td>1</td><td>2</td><td>90</td></tr><tr><td>2</td><td>1</td><td>88</td></tr><tr><td>2</td><td>3</td><td>80</td></tr><tr><td></td><td></td><td></td></tr></tbody></table></li><li><p>self to self - 自关联</p><p>t_emp表</p><table><thead><tr><th>id</th><th>name</th><th>manager_id(上司id)</th></tr></thead><tbody><tr><td>1</td><td>王宝强</td><td>4</td></tr><tr><td>2</td><td>羽凡</td><td>4</td></tr><tr><td>3</td><td>贾乃亮</td><td>4</td></tr><tr><td>4</td><td>武大郎</td><td></td></tr></tbody></table><p>外键列是允许为空的</p></li></ol></blockquote><hr><h1 id="2-传统写法练习"><a href="#2-传统写法练习" class="headerlink" title="2. 传统写法练习"></a>2. 传统写法练习</h1><blockquote><ol><li><p>查找员工的名称,该员工所在部门的名称以及该员工所在区域的名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select e.first_name,d.name,r.name from s_emp e,s_dept d,s_region r<br>where e.dept_id = d.id and d.region_id = r.id;<br></code></pre></td></tr></table></figure></li><li><p>找出31部门的名称以及这个这个部门员工的名字和薪资</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select d.id,d.name,e.first_name,e.salary from s_dept d,s_emp e<br>where e.dept_id = d.id and d.id = 31;<br></code></pre></td></tr></table></figure></li><li><p>找出欧洲区域上所有的员工名字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select e.first_name,r.name from s_emp e,s_region r,s_dept d<br>where e.dept_id = d.id and d.region_id = r.id and r.name=&#x27;Europe&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>查询客户的id,名称以及该客户拥有的所有的订单的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select c.id cid,c.name,o.* from s_customer c,s_ord o<br>where c.id = o.customer_id;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="3-关联的写法"><a href="#3-关联的写法" class="headerlink" title="3. 关联的写法"></a>3. 关联的写法</h1><blockquote><ol><li>内联 [inner] join</li><li>**左连接 **left join</li><li>**右连接 **right join</li></ol></blockquote><hr><blockquote><p>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">表A join 表B on 一的一方的主键 = 多的一方的外键<br><br>1. 能够使用join连接的俩张表之间必然要存在直接的关系<br>2. on不能够替代where使用的,on的作用就是用来去除笛卡尔积的.<br></code></pre></td></tr></table></figure><p>查找员工的id,first_name以及部门的id,部门的name</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select e.id,e.first_name,d.id,d.name <br>from s_emp e join s_dept d on e.dept_id = d.id;<br></code></pre></td></tr></table></figure></blockquote><h1 id="4-关联查询的练习"><a href="#4-关联查询的练习" class="headerlink" title="4. 关联查询的练习"></a>4. 关联查询的练习</h1><blockquote><ol><li><p>查找员工的名称,该员工所在部门的名称以及该员工所在区域的名称</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">e</span>.first_name,d.name,r.name <span class="hljs-keyword">from</span> <br>s_emp <span class="hljs-built_in">e</span> <span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id<br><span class="hljs-keyword">join</span> s_region r <span class="hljs-keyword">on</span> r.id = d.region_id<br></code></pre></td></tr></table></figure></li><li><p>找出31部门的名称以及这个这个部门员工的名字和薪资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> d.id,d.name,<span class="hljs-built_in">e</span>.first_name,<span class="hljs-built_in">e</span>.salary <span class="hljs-keyword">from</span> <br>s_emp <span class="hljs-built_in">e</span> <span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id<br><span class="hljs-keyword">where</span> d.id = <span class="hljs-number">31</span>;<br></code></pre></td></tr></table></figure></li><li><p>找出欧洲区域上所有的员工名字</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> r.name,<span class="hljs-built_in">e</span>.first_name <span class="hljs-keyword">from</span> s_emp <span class="hljs-built_in">e</span><br><span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> d.id = <span class="hljs-built_in">e</span>.dept_id<br><span class="hljs-keyword">join</span> s_region r <span class="hljs-keyword">on</span> r.id = d.region_id<br><span class="hljs-keyword">where</span> r.name=<span class="hljs-string">&#x27;Europe&#x27;</span>;<br></code></pre></td></tr></table></figure></li><li><p>查询客户的id,名称以及该客户拥有的所有的订单的信息</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-keyword">select</span> <span class="hljs-keyword">c</span>.id cid<span class="hljs-punctuation">,</span><span class="hljs-keyword">c</span>.name<span class="hljs-punctuation">,</span>o.* from s_customer <span class="hljs-keyword">c</span> join s_ord o<br>on <span class="hljs-keyword">c</span>.id <span class="hljs-operator">=</span> o.customer_id<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>查询客户的id,名称以及该客户拥有的所有的订单的信息.如果该客户不存在订单,也要能够展示出来.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-comment">-- left join</span><br><span class="hljs-keyword">select</span> c.id cid,c.name,o.* <span class="hljs-keyword">from</span> s_customer c <span class="hljs-keyword">left join</span> s_ord o<br><span class="hljs-keyword">on</span> c.id = o.customer_id;<br><span class="hljs-comment">-- right join</span><br><span class="hljs-keyword">select</span> c.id cid,c.name,o.* <span class="hljs-keyword">from</span> s_ord o <span class="hljs-keyword">right join</span> s_customer c<br><span class="hljs-keyword">on</span> c.id = o.customer_id;<br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><p>练习: 查询出员工的id,first_name以及这个员工的上司的名字</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs applescript">select e1.<span class="hljs-built_in">id</span>,e1.first_name 员工,e2.first_name 上司<br><span class="hljs-keyword">from</span> s_emp e1 join s_emp e2 <span class="hljs-keyword">on</span> e1.manager_id = e2.<span class="hljs-built_in">id</span>;<br><br><span class="hljs-comment">-- 没有上司的员工也要能够被加载出来.</span><br>select e1.<span class="hljs-built_in">id</span>,e1.first_name 员工,e2.first_name 上司<br><span class="hljs-keyword">from</span> s_emp e1 left join s_emp e2 <span class="hljs-keyword">on</span> e1.manager_id = e2.<span class="hljs-built_in">id</span>;<br></code></pre></td></tr></table></figure></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>学习第二天</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+github搭建博客服务器</title>
    <link href="/2023/07/11/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2023/07/11/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="hexo-github搭建博客服务器"><a href="#hexo-github搭建博客服务器" class="headerlink" title="hexo+github搭建博客服务器"></a>hexo+github搭建博客服务器</h1><blockquote><ol><li>csdn,简书,有道笔记 - <strong>广告比较多</strong></li><li>hexo+github[比较慢,翻墙]&#x2F;gitee[Git pages服务器 - 维护]&#x2F;<strong>阿里云服务器</strong></li></ol></blockquote><h1 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h1><blockquote><ol><li>非中文的非特殊字符的目录中[目录中不要出现空格或者带有特殊符号的]</li><li>D:&#x2F;node-v14.17.3-win-x64</li></ol></blockquote><h2 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h2><blockquote><ol><li><p>桌面计算机 - 右击 - 属性 - 高级系统设置 - 环境变量(N)</p></li><li><p>定位到下方的系统变量</p></li><li><p>定位到变量名 - Path - 编辑 - 新建</p></li><li><p>D:&#x2F;node-v14.17.3-win-x64</p></li><li><p>一定要关闭所有的环境变量配置的窗口 - 确定</p></li><li><p>打开终端[如果终端已经打开了,关闭 - 重新打开]</p><p>win[微软图标]+r - 输入cmd  - 输入如下指令检测nodejs是否配置成功</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm -v<br><span class="hljs-number">6</span>.<span class="hljs-number">14</span>.<span class="hljs-number">5</span> 出现版本号,则说明配置成功<br>               <br>如果出现了不是内部或者外部的命令的同学,请检查自己的nodejs解压缩之后的路径是否<br>成功配置到了<span class="hljs-built_in">path</span>中<br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="简单认识npm"><a href="#简单认识npm" class="headerlink" title="简单认识npm"></a>简单认识npm</h2><blockquote><p>npm是javascript的一个**包[前端框架]**管理工具,并且是nodejs平台默认的包管理工具.</p><p>通过npm可以安装,共享,分发代码,管理项目依赖关系.</p><p>类似于java中的maven或者gradle[强大的项目构建工具以及项目依赖管理工具]</p></blockquote><h2 id="npm简单使用"><a href="#npm简单使用" class="headerlink" title="npm简单使用"></a>npm简单使用</h2><h3 id="修改镜像"><a href="#修改镜像" class="headerlink" title="修改镜像"></a>修改镜像</h3><blockquote><p>为了下载速度变快,修改npm的镜像</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>验证一下,镜像是否成功修改了</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm config get registry<br><span class="hljs-function"></span><br><span class="hljs-function">https://<span class="hljs-title">registry.npm.taobao.org</span>/</span><br></code></pre></td></tr></table></figure></blockquote><h2 id="简单使用-不需要操作"><a href="#简单使用-不需要操作" class="headerlink" title="简单使用 - 不需要操作"></a>简单使用 - 不需要操作</h2><blockquote><ol><li><p>下载bootstrap</p><p>npm install 框架名称  - 默认下载的是最新的版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install bootstrap@<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="Hexo官网"><a href="#Hexo官网" class="headerlink" title="Hexo官网"></a>Hexo官网</h1><blockquote><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><ol><li><p>假设你在D盘根目录下新建了一个文件夹hello-hexo[博客项目的根目录]</p></li><li><p>win+r - 打开终端</p></li><li><p>通过dos命令进入到hello-hexo目录中</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">C:/<span class="hljs-title">User</span>/<span class="hljs-title">admin</span>&gt;<span class="hljs-title">d</span>:</span><br><span class="hljs-function"><span class="hljs-title">D</span>:&gt;<span class="hljs-title">cd</span> <span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span></span><br><span class="hljs-function"><span class="hljs-title">D</span>:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>&gt;<span class="hljs-title">npm</span> <span class="hljs-title">install</span> <span class="hljs-title">hexo</span>-<span class="hljs-title">cli</span> -<span class="hljs-title">g</span></span><br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="创建真正的博客目录"><a href="#创建真正的博客目录" class="headerlink" title="创建真正的博客目录"></a>创建真正的博客目录</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>&gt;<span class="hljs-title">hexo</span> <span class="hljs-title">init</span> <span class="hljs-title">hello</span>-<span class="hljs-title">blog</span></span><br></code></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">cd</span> hello-blog<br><span class="hljs-function">D:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">npm</span> <span class="hljs-title">install</span></span><br></code></pre></td></tr></table></figure><h2 id="测试-启动博客服务器"><a href="#测试-启动博客服务器" class="headerlink" title="测试 - 启动博客服务器"></a>测试 - 启动博客服务器</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">hexo</span> <span class="hljs-title">s</span></span><br></code></pre></td></tr></table></figure><p><code>关闭服务器</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">ctrl+c<br></code></pre></td></tr></table></figure><p><em><strong>打开浏览器输入:localhost:4000</strong></em></p><h2 id="常用主题模板"><a href="#常用主题模板" class="headerlink" title="常用主题模板"></a>常用主题模板</h2><blockquote><p><a href="https://blog.csdn.net/zgd826237710/article/details/99671027">https://blog.csdn.net/zgd826237710/article/details/99671027</a></p><p>使用git命令来进行克隆,需要提前安装好git,检测git是否安装成功,<strong>重新打开终端</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">git --version<br></code></pre></td></tr></table></figure></blockquote><h2 id="注册码云账号"><a href="#注册码云账号" class="headerlink" title="注册码云账号"></a>注册码云账号</h2><blockquote><p>推荐用QQ注册一下</p><p>本地配置码云账号信息 - 配置文件 - 位置windows的用户主目录下</p><p>C:&#x2F;User&#x2F;计算机用户名 - 观察是否存在**.gitconfig**文件,添加如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs config">[user]<br>email = 码云的QQ邮箱<br>name = 用户名<br></code></pre></td></tr></table></figure></blockquote><h2 id="安装模板"><a href="#安装模板" class="headerlink" title="安装模板"></a>安装模板</h2><blockquote><p>通过cmd进入到hello-blog目录中的themes目录中</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">cd</span> <span class="hljs-title">themes</span></span><br><span class="hljs-function"><span class="hljs-title">D</span>://<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>/<span class="hljs-title">themes</span>&gt;<span class="hljs-title">git</span> <span class="hljs-title">clone</span> <span class="hljs-title">https</span>://<span class="hljs-title">gitee.com</span>/<span class="hljs-title">guancg</span>/<span class="hljs-title">hexo</span>-<span class="hljs-title">theme</span>-<span class="hljs-title">pure.git</span></span><br></code></pre></td></tr></table></figure></blockquote><p>或者直接从github上直接clone</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">git clone https://github.com/cofess/hexo-theme-pure.git<br></code></pre></td></tr></table></figure><h1 id="更新主题配置"><a href="#更新主题配置" class="headerlink" title="更新主题配置"></a>更新主题配置</h1><blockquote><ol><li><p>指定新的主题</p><p>hello-blog目录下的_config.yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">theme:</span> <span class="hljs-string">hexo-theme-pure</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="2"><li>重启服务器hexo s</li></ol></blockquote><h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><p>hexo-theme-pure&#x2F;_config.yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">overriden</span><br>  <span class="hljs-attr">author:</span> <span class="hljs-string">亲爱的管管</span><br>  <span class="hljs-attr">author_title:</span> <span class="hljs-string">高级打字员</span><br>  <span class="hljs-attr">author_description:</span> <span class="hljs-string">个人简介。</span><br>  <span class="hljs-attr">location:</span> <span class="hljs-string">SuZhou,</span> <span class="hljs-string">China</span><br></code></pre></td></tr></table></figure><h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><blockquote><p>语法的编辑器 - <a href="https://typora.io/">https://typora.io/</a></p><p>文件的后缀是md</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs txt">常用语法如下:<br><br>1. 标题的语法:<br>1~6标题 - # 一级标题    ## 二级标题   <br><br>2. 代码块 - java,js,mysql...<br><br>​~~~java 敲enter键<br><br>3. 列表<br>3-1. 无序列表<br>     * 列表名称<br>     <br>     有序列表<br>     1. 列表名称<br>     <br>4. 高亮显示<br>   `高亮显示内容`<br>   <br>5. 加粗字体<br>   **粗体**<br>   <br>6. 斜体<br>   *斜体*<br>   <br>7. 粗+斜<br>   ***粗斜***<br>   <br>8. 段落<br>   &gt; 空格<br>   <br>9. 引入外部图片<br>   ![](xx.png)<br>   <br>10. 表格<br></code></pre></td></tr></table></figure></blockquote><h1 id="新建博文"><a href="#新建博文" class="headerlink" title="新建博文"></a>新建博文</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D://<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">hexo</span> <span class="hljs-title">n</span> <span class="hljs-title">java</span></span><br></code></pre></td></tr></table></figure><p>效果:hello-blog目录下的source&#x2F;_ports&#x2F;自动生成一个java.md文件</p><p>重启blog服务器</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D://<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">hexo</span> <span class="hljs-title">s</span></span><br></code></pre></td></tr></table></figure><h1 id="主题的侧边栏"><a href="#主题的侧边栏" class="headerlink" title="主题的侧边栏"></a>主题的侧边栏</h1><blockquote><p>侧边栏的链接生效</p><p>将&#x2F;hello-blog&#x2F;themes&#x2F;hexo-theme-pure&#x2F;_source&#x2F;下的除了_data文件夹,其余文件夹</p><p>拷贝一份放入到hello-blog目录下的source目录中即可</p></blockquote><h1 id="文章的分类和标签"><a href="#文章的分类和标签" class="headerlink" title="文章的分类和标签"></a>文章的分类和标签</h1><blockquote><p>只需要在文章的.md文件的自动生成的头部添加</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">title: java<br>date: 2021-07-13 08:44:42<br>categories: java<br>tags: java<br></code></pre></td></tr></table></figure></blockquote><h1 id="博客的语言环境设置"><a href="#博客的语言环境设置" class="headerlink" title="博客的语言环境设置"></a>博客的语言环境设置</h1><blockquote><p>设置中文</p><p>hello-blog下的_config.yml文件中</p><p>language: zh-CN</p></blockquote><h1 id="图片显示问题"><a href="#图片显示问题" class="headerlink" title="图片显示问题"></a>图片显示问题</h1><blockquote><ol><li><p>安装插件 - npm install <a href="https://gitee.com/guancg/hexo-asset-image.git">https://gitee.com/guancg/hexo-asset-image.git</a> –save</p></li><li><p>需要到hello-blog&#x2F;_config.yml文件中进行配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li><p>hexo n 机器学习</p><p><code>效果就是除了生成了机器学习.md还有一个机器学习文件夹,那么这篇文章的所有的图片就可以存储在机器学习文件夹中</code></p></li><li><p>hexo s</p></li></ol></blockquote><h1 id="内置搜索的功能"><a href="#内置搜索的功能" class="headerlink" title="内置搜索的功能"></a>内置搜索的功能</h1><blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Search</span><br><span class="hljs-attr">search:</span><br><span class="hljs-attr">insight:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># you need to install `hexo-generator-json-content` before using Insight Search</span><br><span class="hljs-attr">baidu:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># you need to disable other search engines to use Baidu search</span><br></code></pre></td></tr></table></figure><p>安装内置搜索插件</p><p>npm i -S hexo-generator-json-content</p></blockquote><h1 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h1><blockquote><p>不需要本地数据库进行存储的,用的是第三方的.</p><p>LeanCloud - 官网地址 - <a href="https://www.leancloud.cn/">https://www.leancloud.cn/</a></p><p>注册 - 登录 - 控制台 - 创建应用 - 右下设置 - 应用凭证</p><p>appId - sljUq97vUAdLAo7XQdf13aFR-gzGzoHsz</p><p>appKey - 3hn4ijEgSzJeRV4nkmXThmGV</p></blockquote><p><code>在hexo-theme-pure\_config.yml文件中配置</code></p><blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">valine:</span> <span class="hljs-comment"># Valine. https://valine.js.org</span><br> <span class="hljs-attr">appid:</span> <span class="hljs-string">sljUq97vUAdLAo7XQdf13aFR-gzGzoHsz</span>  <span class="hljs-comment"># your leancloud application appid</span><br> <span class="hljs-attr">appkey:</span> <span class="hljs-string">3hn4ijEgSzJeRV4nkmXThmGV#</span> <span class="hljs-string">your</span> <span class="hljs-string">leancloud</span> <span class="hljs-string">application</span> <span class="hljs-string">appkey</span><br> <span class="hljs-attr">notify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># mail notifier , https://github.com/xCss/Valine/wiki</span><br> <span class="hljs-attr">verify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Verification code</span><br> <span class="hljs-attr">placeholder:</span> <span class="hljs-string">Just</span> <span class="hljs-string">go</span> <span class="hljs-string">go</span> <span class="hljs-comment"># comment box placeholder</span><br> <span class="hljs-attr">avatar:</span> <span class="hljs-string">mm</span> <span class="hljs-comment"># gravatar style</span><br> <span class="hljs-attr">meta:</span> <span class="hljs-string">nick,mail,link</span> <span class="hljs-comment"># custom comment header</span><br> <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span> <span class="hljs-comment"># pagination size</span><br> <span class="hljs-attr">visitor:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Article reading statistic https://valine.js.org/visitor.html</span><br></code></pre></td></tr></table></figure></blockquote><p>#字数统计&amp;阅读时长</p><blockquote><ol><li><p>npm i -S hexo-wordcount</p></li><li><p>hexo-theme-pure_config.yml文件中配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">postCount:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">wordcount:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 文章字数统计</span><br>  <span class="hljs-attr">min2read:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 阅读时长预计 </span><br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="附件-优秀插件"><a href="#附件-优秀插件" class="headerlink" title="附件-优秀插件"></a>附件-优秀插件</h1><blockquote><ol><li><p>显示图片</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install https://gitee.com/guancg/hexo-asset-image.git --save<br></code></pre></td></tr></table></figure></li><li><p>内置搜索</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm i -S hexo-generator-json-content<br></code></pre></td></tr></table></figure></li><li><p>字数统计&amp;阅读时长</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm i -S hexo-wordcount<br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="4"><li><p>github部署</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="部署github"><a href="#部署github" class="headerlink" title="部署github"></a>部署github</h1><blockquote><p>git config –global user.name “github用户名” </p><p>git config –global user.email “github邮箱”</p></blockquote><blockquote><p>github.com</p></blockquote><blockquote><p>chrome浏览器 + iguge - <a href="https://iguge.app/">https://iguge.app/</a></p></blockquote><blockquote><p>新建的仓库的名称必须是<strong>guancgsuccess.github.io</strong></p><p>仓库地址 - <a href="https://github.com/guancgsuccess/guancgsuccess.github.io.git">https://github.com/guancgsuccess/guancgsuccess.github.io.git</a></p></blockquote><blockquote><p>安装github部署插件.</p><p>npm install hexo-deployer-git –save</p></blockquote><blockquote><p>hello-blog&#x2F;_config.yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;git&#x27;</span><br><span class="hljs-attr">repo:</span> <span class="hljs-string">&#x27;https://github.com/guancgsuccess/guancgsuccess.github.io.git&#x27;</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">&#x27;master&#x27;</span><br></code></pre></td></tr></table></figure></blockquote><p><code>hexo三连操作</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cmd">hexo cl<br>hexo g<br>hexo s<br>hexo d<br></code></pre></td></tr></table></figure><p>浏览器输入 - guancgsuccess.github.io</p>]]></content>
    
    
    
    <tags>
      
      <tag>搭建博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yukeoneday</title>
    <link href="/2023/07/11/yukeoneday/"/>
    <url>/2023/07/11/yukeoneday/</url>
    
    <content type="html"><![CDATA[<h1 id="怎么学习"><a href="#怎么学习" class="headerlink" title="怎么学习"></a>怎么学习</h1><blockquote><ol><li>听懂(100%)</li><li>多看bug - 多看问题</li><li>练打字 - 多敲</li></ol></blockquote><hr><h1 id="人机交互"><a href="#人机交互" class="headerlink" title="人机交互"></a>人机交互</h1><blockquote><ol><li>CLI (Command Line Interface) - 命令行方式 - 需要记忆大量的dos命令,比较繁琐</li><li>GUI(Graphical User Interface) - 用户界面方式 - “傻瓜式操作”</li><li>可执行程序xx.exe文件[C语言编写之后直接编译的程序],如果以后双击它之后,如果闪退,说明计算机告诉你,只能采用CLI</li></ol></blockquote><h1 id="为什么要进行环境变量的配置"><a href="#为什么要进行环境变量的配置" class="headerlink" title="为什么要进行环境变量的配置"></a>为什么要进行环境变量的配置</h1><blockquote><ol><li><p><strong>win+r</strong> - 输入cmd</p><p><code>cmd窗口,dos窗口,黑窗口,终端</code></p></li><li><p>输入命令notepad - 成功唤醒记事本的程序</p><p>接着输入命令 - success - 报错,大概的意思就是<strong>不是系统内部或者外部的命令</strong></p></li><li><p>windows系统执行命令的顺序</p><ul><li><p>优先到当前目录下去查找是否存在这个命令(notepad.exe).</p></li><li><p>如果不存在,继续查找环境变量Path中的路径是否包含这个命令所在的目录</p><p>cmd窗口中输入path - 查找C:\WINDOWS</p></li></ul></li><li><p>到C盘WINDOWS目录中去查找是否存在notepad.exe&#x2F;NOTEPAD.exe</p></li></ol></blockquote><hr><blockquote><p>思考 - 在我们没有对mysql进行环境变量配置之前,想用使用mysql.exe命令???</p><p>只能手动采用dos命令进入到mysql的bin目录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">C:\<span class="hljs-title">User</span>\<span class="hljs-title">admin</span>&gt;<span class="hljs-title">d</span>:</span><br></code></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\&gt;<span class="hljs-title">cd</span> <span class="hljs-title">temp</span></span><br></code></pre></td></tr></table></figure><p><code>cd - change direcotry</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\&gt;<span class="hljs-title">cd</span> <span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span></span><br></code></pre></td></tr></table></figure><p><code>具体的目录名不需要敲全了,敲几个前缀 + tab键</code></p><p>继续进入到终点的目录bin</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>&gt;<span class="hljs-title">cd</span> <span class="hljs-title">bin</span></span><br></code></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;<span class="hljs-title">mysql</span></span><br></code></pre></td></tr></table></figure></blockquote><hr><h1 id="1-安装mysql"><a href="#1-安装mysql" class="headerlink" title="1. 安装mysql"></a>1. 安装mysql</h1><blockquote><p>版本要求:至少是5.7&#x2F;8.x</p></blockquote><blockquote><ol><li><p>官方下载 - <a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p></li><li><p>下载解压缩到一个<code>合法的目录</code></p><blockquote><p>目录名不要带有中文,不要带有特殊符号(Program File(x86))</p></blockquote></li><li><p><strong>进行一个环境变量的配置</strong></p><blockquote><ol><li><p>右击计算机 - 属性 - 高级系统设置 - 环境变量 - 系统变量</p></li><li><p>定位到默认的自带的内置的变量名Path - 编辑 - 新建</p><p>然后将mysql的bin目录的绝对地址拷贝进去即可.</p></li><li><p><strong>以后只要环境变量进行了设置 - 应用 - 确定 - 关闭所有的设置窗口</strong></p><p><strong>一定要重启cmd窗口</strong></p></li><li><p>重新打开cmd - 输入mysql看是否生效</p></li></ol></blockquote></li><li><p>解压之后的目录中新建一个文件my.ini文件</p><p>(注意点: windows - 工具栏 - 显示计算机扩展名&#x2F;后缀名 - 勾选)</p></li><li><p>编辑my.ini文件</p><p><code>唯一需要修改的只有basedir,把它修改成自己的mysql-8.0.32-winx64的绝对地址</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[client]</span><br><span class="hljs-comment"># 设置mysql客户端默认字符集</span><br><span class="hljs-attr">default-character-set</span>=utf8<br>       <br><span class="hljs-section">[mysqld]</span><br><span class="hljs-comment"># 设置3306端口</span><br><span class="hljs-attr">port</span>=<span class="hljs-number">3306</span><br><span class="hljs-comment"># 设置mysql的安装目录</span><br><span class="hljs-attr">basedir</span>=C:\\web\\mysql-<span class="hljs-number">8.0</span>.<span class="hljs-number">11</span><br><span class="hljs-comment"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span><br><span class="hljs-comment"># datadir=C:\\web\\sqldata</span><br><span class="hljs-comment"># 允许最大连接数</span><br><span class="hljs-attr">max_connections</span>=<span class="hljs-number">20</span><br><span class="hljs-comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="hljs-attr">character-set-server</span>=utf8<br><span class="hljs-comment"># 创建新表时将使用的默认存储引擎</span><br><span class="hljs-attr">default-storage-engine</span>=INNODB<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><ol start="6"><li><p>以<strong>管理员身份打开 cmd 命令行工具</strong>，切换目录 - 进入到bin目录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>初始化数据库</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;<span class="hljs-title">mysqld</span> --<span class="hljs-title">initialize</span> --<span class="hljs-title">console</span></span><br></code></pre></td></tr></table></figure><p><code>1. 分配一个默认的密码</code></p><p><code>2. mysql-8.0.32-winx64是否自动生成了data目录</code></p></li><li><p>安装mysqld</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;<span class="hljs-title">mysqld</span> <span class="hljs-title">install</span></span><br></code></pre></td></tr></table></figure><p><code>检测一下mysql的服务是否安装成功</code> - 右击计算机 - 管理 - 服务 - 服务和应用程序 - 右边的窗口 - MYSQL</p><p>只有mysql服务处于正在执行的状态,那么mysql才能够正常使用,建议右击MYSQL属性 - 设置成开机自动启动.</p></li><li><p>启动mysql</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;<span class="hljs-title">net</span> <span class="hljs-title">start</span> <span class="hljs-title">mysql</span></span><br></code></pre></td></tr></table></figure><p><code>mysql服务的运行状态 - 正在运行中</code></p></li><li><p>登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">D:\temp\mysql-8.0.32-winx64\bin&gt;mysql -uroot -p临时密码<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>如果临时密码使用不了</p><ol><li><p>关闭mysql服务关闭</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">重新打开<span class="hljs-built_in">cmd</span><br><span class="hljs-function">C:\<span class="hljs-title">User</span>\<span class="hljs-title">admin</span>&gt;<span class="hljs-title">net</span> <span class="hljs-title">stop</span> <span class="hljs-title">mysql</span></span><br></code></pre></td></tr></table></figure></li><li><p>删除data目录</p></li><li><p>mysqld –initialize –console以及net start mysql再登录.</p></li></ol></blockquote><hr><blockquote><ol start="5"><li><p>直接修改密码即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;root&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>退出mysql登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt;exit<br></code></pre></td></tr></table></figure></li><li><p>重新登录即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql -uroot -proot<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="2-pre-mysql体系"><a href="#2-pre-mysql体系" class="headerlink" title="2-pre.mysql体系"></a>2-pre.mysql体系</h1><blockquote><ol><li><p>sql语句(ddl,dml,dcl,tcl,dql)的使用 - 专门用来操作关系型数据库的.</p><ul><li>互联网项目对sql的要求是降低的 - 基于单表sql开发的模式</li><li>传统行业对sql的要求是高的.</li></ul></li><li><p>视图,存储过程,<strong>索引(B+树)</strong>,事务,函数,表(基本单位),用户 - 数据库的单位&#x2F;对象</p></li><li><p>应用架构</p><ul><li><p>单体架构 - 单台计算机仅仅只有一个mysql节点 - 适合小型的项目</p></li><li><p>主从复制架构 - 至少是2个节点,主节点负责写入,从节点读取.</p><p>难点 - 主从的数据的同步问题 - 适合中小型项目</p></li><li><p>集群 - 适合大型的项目,为了解决三高问题.<em><strong>高性能,高并发,高可用.</strong></em></p></li></ul></li></ol></blockquote><hr><h1 id="2-mysql介绍"><a href="#2-mysql介绍" class="headerlink" title="2. mysql介绍"></a>2. mysql介绍</h1><blockquote><ol><li>mysql属于瑞典的Mysql AB公司的,隶属于Oracle(甲骨文,主打的产品oracle数据库)旗下产品.</li><li>mysql特点 - 体积小,速度快,特别适合中小型企业,开源,免费的.分成社区版和商业版.</li><li>市面上主流的<strong>关系型数据库</strong> - mysql,oracle,sqlserver(MS-微软)</li><li>mysql软件也是采用c&#x2F;c++编写的.</li></ol></blockquote><h1 id="3-专业术语"><a href="#3-专业术语" class="headerlink" title="3. 专业术语"></a>3. 专业术语</h1><blockquote><ol><li><p>DB - database 数据库 - 将数据按照一定的<em><strong>数据结构</strong></em>来进行存储,管理和组织的.</p><p>数据的仓库</p></li><li><p>DBMS - database management system - 数据库管理系统.用于操纵和控制数据库的系统.</p><p>用于建立,使用和维护我们的db. 用户通过dbms来访问db中的数据,dba通过dbms来管理和维护</p><p>我们的db. 使用dbms来保证db的安全性和完整性.</p></li><li><p>RDBMS - relational database management system关系型数据库管理系统 - 负责管理关系型数据库</p></li><li><p>关系型数据库 - 数据呈现的方式是一张二维表[行和列] - 表格型数据库</p></li><li><p>非关系型数据库[nosql] - 键值对数据库redis,文档型数据库mongodb</p></li><li><p>DBS - 数据库系统 - 类似”生态概念</p><p>DBS &#x3D; DB + DBA[数据库管理员] + DBMS</p></li></ol></blockquote><hr><h1 id="4-SQL分类"><a href="#4-SQL分类" class="headerlink" title="4. SQL分类"></a>4. SQL分类</h1><blockquote><p>它同时也是我们的脚本文件的后缀.</p></blockquote><blockquote><p>structured query language结构化查询语言…</p><p>按照功能来划分</p><ol><li><p>DDL - Data Definition Language - 数据定义语言</p><p>create,drop,alter等等…</p></li><li><p>DCL - Data Control Language - 数据控制语言</p><p>grant(授权),revoke(取消权限)等等…</p></li><li><p>DQL - Data Query Languge  - 数据查询语言</p><p><strong>select - 查询</strong></p></li><li><p>DML - Data Manipution Language - 数据操纵语言</p><p><strong>insert,delete,update</strong></p></li><li><p>TCL - Transaction Control Languge - 事务控制语言</p><p>commit,rollback,savepoint等等…</p></li></ol></blockquote><hr><h1 id="mysql的客户端的选择"><a href="#mysql的客户端的选择" class="headerlink" title="mysql的客户端的选择"></a>mysql的客户端的选择</h1><blockquote><ol><li>界面更加友好的话 - navicat导航猫 - 不建议装.</li><li>安装好mysql之后,实际上它会默认安装好mysql-server以及mysql-client</li></ol></blockquote><h1 id="5-体验-导入脚本"><a href="#5-体验-导入脚本" class="headerlink" title="5. 体验 - 导入脚本"></a>5. 体验 - 导入脚本</h1><blockquote><p>mysql是以仓库的方式来管理若干表的.建表之前,需要先创建仓库.并且不同的仓库之间是不可见的.</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">mysql -uroot -proot<br></code></pre></td></tr></table></figure><p><code>查看当前所有的数据库</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show databases;<br></code></pre></td></tr></table></figure><p><code>删除仓库</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop database 数据库名;<br></code></pre></td></tr></table></figure><p><code>创建一个仓库</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create database 数据库名;<br><br>create database yuke;<br></code></pre></td></tr></table></figure><p><code>表一定是放在仓库下的 - 若干张表构建一个db</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 选择db<br><br>use 数据库名<br><br>use yuke<br></code></pre></td></tr></table></figure><p><code>查看一下当前仓库下所有的表</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show tables;<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>导入脚本的两种方式:</p><ol><li><p>source sql脚本文件的绝对地址;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt; source /Users/admin/Documents/success/e/mysql_cn.sql ;<br></code></pre></td></tr></table></figure></li><li><p>手动打开sql脚本 - 复制内容 - 粘贴</p></li></ol></blockquote><hr><h1 id="6-简单查询"><a href="#6-简单查询" class="headerlink" title="6. 简单查询"></a>6. 简单查询</h1><blockquote><p>查询的本质</p><ol><li>到哪里查-查看的是哪张表</li><li>查什么 - 查看的列[数据域Field]</li></ol></blockquote><hr><blockquote><p>客户端的命令 - 查看表的结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">desc 表名<br><br>desc s_emp;<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>每张表都会拥有一个主键列,通常是id列.存在组合主键的情况,主键的特点是用来唯一标识元组[一行]记录的.</p><p>主键列的特点 : 非空且唯一.</p></blockquote><hr><blockquote><p>单表查询语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT 列名 [列别名],列名2 [列别名2] <br>FROM 表名<br>WHERE 条件语句<br>ORDER BY 排序列;<br></code></pre></td></tr></table></figure><p>精简一点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT 列名 [列别名],列名2 [列别名2] <br>FROM 表名;<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>特殊 - 查询所有列,直接用*表示,但是开发中不允许的…</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp;<br></code></pre></td></tr></table></figure><p><code>列比较多的场景</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp \G;<br></code></pre></td></tr></table></figure></blockquote><hr><h2 id="1-列别名"><a href="#1-列别名" class="headerlink" title="1. 列别名"></a>1. 列别名</h2><blockquote><ol><li><p>查看员工的名字和薪资以及入职日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,salary,start_date from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>取别名 - 提高可读性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name 名字,salary 薪资,start_date 入职日期 from s_emp;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name as 名字,salary as 薪资,start_date as 入职日期 from s_emp;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name &quot;名字&quot;,salary &quot;薪资&quot;,start_date &quot;入职日期&quot; from s_emp;<br>   <br>select first_name as &quot;名字&quot;,salary as &quot;薪资&quot;,start_date as &quot;入职日期&quot; from s_emp;<br></code></pre></td></tr></table></figure><p><code>数据库的单行函数 - concat函数 - 表示拼接 - concat(列1,列2,...) - 可变长参数列表</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询员工的姓名(last_name,first_name)<br>select last_name,first_name from s_emp;<br>   <br>-- 仅仅只有1列展示<br>-- db中表示字符串或者字符的永远是单引号.<br>-- db中的双引号是用来包裹格式用的<br>select concat(last_name,&#x27; &#x27;,first_name) &quot;姓 名&quot; from s_emp;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="2-练习"><a href="#2-练习" class="headerlink" title="2. 练习"></a>2. 练习</h2><blockquote><ol><li><p>查看员工的所有的职称title</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select title from s_emp;<br><br>-- 检索出所有的title,包括重复的数据<br>-- 使用关键字distinct来实现去重操作<br>select distinct title from s_emp;<br><br>-- 其他应用<br>-- 分组函数count,统计表中的记录数[行数],重复的数据也算一行(有一个算一个).null值数据不算的.<br>-- 统计title的数量<br>select count(distinct title) from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>查看员工的年薪</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 列是可以参加计算的,但是null值的数据计算的结果还是null值<br>select first_name,salary*12 年薪 from s_emp;<br><br>-- 上面查询出来的年薪不带提成的,需求是带上提成<br>select first_name,salary*12*(1+commission_pct/100) 年薪 from s_emp;<br><br>-- 发现上面查询出来的年薪,如果员工不带提成,计算的结果是null,需要使用mysql的空值置换函数<br>-- coalesce(m,n) 如果m为null则结果是n,否则结果仍然是m<br>-- 类似于java中的if/else  ,  三元操作符  m==null?n:m<br>select first_name,salary*12*(1+coalesce(commission_pct,0)/100) 年薪 from s_emp;<br><br>-- 使用mysql的关于数字的函数truncate或者round<br>-- round(m[,n])  n存在,则代表小数的精度 - 四舍五入<br><br>-- truncate(m,n) n保留的精度,直接截取<br><br>-- 函数都是允许嵌套使用的<br>-- 年薪保留整数位<br>select first_name,truncate(salary*12*(1+coalesce(commission_pct,0)/100),0) 年薪 from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>查看区域表所有的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_region;<br><br>-- Africa / Middle East 非洲/中东<br>-- Asia 亚洲<br>-- Europe 欧洲<br>-- North America   北美<br>-- South America   南美<br><br>case 列名 ... <br>when 列值  then &#x27;新值&#x27;<br>when 列值  then &#x27;新值&#x27;<br>when 列值  then &#x27;新值&#x27;<br>else &#x27;未知值&#x27;<br>end 列别名<br><br>select id,<br>case name<br>when &#x27;Asia&#x27; then &#x27;亚洲&#x27;<br>when &#x27;Europe&#x27; then &#x27;欧洲&#x27;<br>when &#x27;North America&#x27; then &#x27;北美&#x27;<br>else &#x27;未知区域&#x27;<br>end 区域名 from s_region;<br><br>-- 上面的列和when后面的值是精确的匹配,如果是范围匹配<br>-- 查看id,first_name,员工的薪水,薪水的等级<br>-- salary&gt;=1800,高产  如果是[1200,1800) - 中产,低于120 - 无产<br><br>select id,first_name,salary,<br>case <br>when salary&gt;=1800 then &#x27;高产&#x27;<br>when salary&gt;=1200 and salary&lt;1800 then &#x27;中产&#x27;<br>else &#x27;无产&#x27;<br>end &#x27;工资等级&#x27; from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>查看订单的id,总价,支付方式(现金&#x2F;信用卡)以及下单日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select id,total,case payment_type<br>when &#x27;CREDIT&#x27; then &#x27;信用卡&#x27;<br>when &#x27;CASH&#x27; then &#x27;现金&#x27;<br>else &#x27;未知方式&#x27;<br>end 支付方式,date_ordered from s_ord;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="7-作业"><a href="#7-作业" class="headerlink" title="7. 作业"></a>7. 作业</h1><blockquote><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><ol><li><p>instr(str,substr) - 返回字符串substr在字符串str第一次出现的位置(str不包含substr时返回0)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select instr(&#x27;abd&#x27;,&#x27;ef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>lpad(str,len,padstr) - 用字符串padstr填补str左端直到字串长度为len并返回 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT lpad(&#x27;abc&#x27;,5,&#x27;ef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>rpad(str,len,padstr) - 用字符串padstr填补str右端直到字串长度为len并返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select rpad(&#x27;abc&#x27;,5,&#x27;efl&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>left(str,len) - 返回字符串str的左端len个字符 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select left(&#x27;abc&#x27;,2);<br></code></pre></td></tr></table></figure></li><li><p>right(str,len) - 返回字符串str的右端len个字符 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select right(&#x27;abc&#x27;,2);<br></code></pre></td></tr></table></figure></li><li><p>substring(str,pos,len) - 返回字符串str的位置pos起len个字符  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select substring(&#x27;abcdef&#x27;,2,3);<br></code></pre></td></tr></table></figure></li><li><p>substring(str,pos) - 返回字符串str的位置pos起后面的子串 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select substring(&#x27;abcdef&#x27;,3);<br></code></pre></td></tr></table></figure></li><li><p>ltrim(str) - 返回删除了左空格的字符串str  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ltrim(&#x27;abcdef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>rtrim(str)  - 返回删除了右空格的字符串str  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select rtrim(&#x27;abcdef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>space(n) - 返回由n个空格字符组成的一个字符串 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select space(&#x27;    &#x27;);<br></code></pre></td></tr></table></figure></li><li><p><em><strong>replace(str,from_str,to_str)  - 用字符串to_str替换字符串str中的子串from_str并返回</strong></em> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select replace(&#x27;abcdef&#x27;,&#x27;&#x27;,&#x27;de&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>reverse(str) - 颠倒字符串str的字符顺序并返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select reverse(&#x27;abcde&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>insert(str,pos,len,newstr) - 把字符串str由位置pos起len个字符长的子串替换为字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select insert(&#x27;abcde&#x27;,2,3,&#x27;fg&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>lower(str) - 返回小写的字符串str  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select lower(&#x27;AbCdE&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>upper(str) - 返回大写的字符串str</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select upper(&#x27;AbCdE&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>char_length(str) -  不管汉字还是数字或者是字母都算是一个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select char_length(&#x27;abcdef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>length(str);&#x2F;&#x2F;汉字占3个,其他占1个.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select length(&#x27;穆星宇s&#x27;);<br></code></pre></td></tr></table></figure><p>用上面的字符串函数实现 - 模拟银行账户的输出方式.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">比如Carmen,显示成C*****<br>Mark,M***<br><br>方法一:<br><span class="hljs-keyword">select</span> first_name,rpad(substring(first_name,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),char_length(first_name),<span class="hljs-string">&#x27;*&#x27;</span>) <span class="hljs-keyword">from</span> s_emp;<br><br>方法二:<br><span class="hljs-keyword">select</span> first_name,concat(substring(first_name,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),rpad(<span class="hljs-string">&#x27;*&#x27;</span>,char_length(first_name)<span class="hljs-number">-1</span>,<span class="hljs-string">&#x27;*&#x27;</span>)) <span class="hljs-keyword">from</span> s_emp;<br><br>方法三:<br><span class="hljs-keyword">select</span> first_name,replace(first_name,substring(first_name,<span class="hljs-number">2</span>),rpad(<span class="hljs-string">&#x27;*&#x27;</span>,char_length(first_name)<span class="hljs-number">-1</span>,<span class="hljs-string">&#x27;*&#x27;</span>))<br><span class="hljs-keyword">from</span> s_emp;<br><br>方法四:<br><span class="hljs-keyword">select</span> first_name,<span class="hljs-keyword">insert</span>(first_name,<span class="hljs-number">2</span>,char_length(first_name)<span class="hljs-number">-1</span>,rpad(<span class="hljs-string">&#x27;*&#x27;</span>,char_length(first_name)<span class="hljs-number">-1</span>,<span class="hljs-string">&#x27;*&#x27;</span>)) <span class="hljs-keyword">from</span> s_emp;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><h2 id="数字函数"><a href="#数字函数" class="headerlink" title="数字函数"></a>数字函数</h2><ol><li><p>abs(n) - 求绝对值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select abs(-10);<br></code></pre></td></tr></table></figure></li><li><p>mod(n,m) - 取模运算,返回n被m除的余数(同%操作符)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select mod(10,3);<br></code></pre></td></tr></table></figure></li><li><p><strong>floor(n) - 返回不大于n的最大整数值</strong> - 向下取整  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select floor(6.66);<br></code></pre></td></tr></table></figure></li><li><p><strong>ceiling(n) - 返回不小于n的最小整数值</strong>  - 向上取整 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ceiling(6.66);<br></code></pre></td></tr></table></figure></li><li><p>round(n[,d]) - 返回n的四舍五入值,保留d位小数(d的默认值为0)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select round(2.226[,2]);<br></code></pre></td></tr></table></figure></li><li><p>pow(x,y) - 返回值x的y次幂 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select pow(2,3);<br></code></pre></td></tr></table></figure></li><li><p>sqrt(n) - 返回非负数n的平方根</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select sqrt(9);<br></code></pre></td></tr></table></figure></li><li><p>pi() - 返回圆周率  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select pi();<br></code></pre></td></tr></table></figure></li><li><p>rand() - 返回在范围[0到1.0)内的随机浮点值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select rand();<br></code></pre></td></tr></table></figure></li><li><p>truncate(n,d) - 保留数字n的d位小数并返回  - 直接截取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select truncate(2.222,2);<br></code></pre></td></tr></table></figure><p>练习:</p><p>每次输出,只输出[1,100]之间的随机整数.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select floor(rand()*100+1);<br><br>-- [3,5]之间的随机整数<br>select floor(rand()*3+3);<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><p>查询当前系统的日期 - select now();</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select now();<br></code></pre></td></tr></table></figure><ol><li><p>dayofweek(date) - 返回日期date是星期几(1&#x3D;星期天,2&#x3D;星期一,……7&#x3D;星期六,odbc标准)  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select dayofweek(now());<br></code></pre></td></tr></table></figure></li><li><p>weekday(date) - 返回日期date是星期几(0&#x3D;星期一,1&#x3D;星期二,……6&#x3D; 星期天)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select weekday(now());<br></code></pre></td></tr></table></figure></li><li><p>year(date) - 返回date的年份(范围在1000到9999) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select year(now());<br></code></pre></td></tr></table></figure></li><li><p>month(date)  - 返回date中的月份数值 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select month(now());<br></code></pre></td></tr></table></figure></li><li><p>dayofmonth(date) - 返回date是一月中的第几日(在1到31范围内) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select dayofmonth(now());<br></code></pre></td></tr></table></figure></li><li><p>hour(time) - 返回time的小时数(范围是0到23)  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select hour(now());<br></code></pre></td></tr></table></figure></li><li><p>minute(time) - 返回time的分钟数(范围是0到59) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select minute(now());<br></code></pre></td></tr></table></figure></li><li><p>second(time) - 返回time的秒数(范围是0到59) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select second(now());<br></code></pre></td></tr></table></figure></li><li><p>period_add(p,n) - 增加n个月到时期p并返回(p的格式’yymm’或’yyyymm’) </p><p>mysql&gt;select period_add(‘202008’,3) ;</p><p>注意:p可以是字符串,一定要满足一定的格式,或者可以直接使用date类型.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select period_add(&#x27;202307&#x27;,3);<br></code></pre></td></tr></table></figure></li><li><p>period_diff(p1,p2) - 返回在时期p1和p2之间月数(p1和p2的格式yymm或yyyymm)  p1-p2</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select period_diff(&#x27;202312&#x27;,&#x27;202307&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>curdate() - 以’yyyy-mm-dd’或yyyymmdd格式返回当前日期值(根据返回值所处上下文是字符串或数字) </p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select curdate();<br></code></pre></td></tr></table></figure></li><li><p>curtime() - 以’hh:mm:ss’或hhmmss格式返回当前时间值(根据返回值所处上下文是字符串或数字)</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select curtime();<br></code></pre></td></tr></table></figure></li><li><p>now() - 以’yyyy-mm-dd hh:mm:ss’或yyyymmddhhmmss格式返回当前日期时间(根据返回值所处上下文是字符串或数字)</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select now();<br></code></pre></td></tr></table></figure><p>  ​     </p></li><li><p>last_day(date) - date日期所在月的最后一天是什么时候</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select last_day(&#x27;20230710&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>datediff(d1,d2) - 两个日期d1,d2之间相差的天数</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select datediff(&#x27;20230731&#x27;,&#x27;20230710&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>timestampdiff(type,d1,d2) - type是YEAR,d1和d2相差的年份,MONTH,月份</p><p>  d1,d2 - yyyymmdd</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select timestampdiff(year,&#x27;20180701&#x27;,&#x27;20230710&#x27;);<br></code></pre></td></tr></table></figure><p>  日期函数补充</p><blockquote><ul><li>date_add(date,interval expr type)</li><li>date_sub(date,interval expr type)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">type:<br>year<br>month<br>day<br>hour<br>minute<br>second<br><br>select date_add(now(),interval 1 year);<br>-- 输出一年前的此刻,当前,一年之后的此刻<br>select date_add(now(),interval -12 month);<br>select date_sub(now(),interval 1 year);<br></code></pre></td></tr></table></figure></blockquote><p>日期格式化</p><blockquote><p>date_format(date,formatPattern)</p><p>将指定的日期格式化成对应模板的字符串 - 涉及到date类型和字符串类型之间的相互转换的问题.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs mysql">根据format字符串格式化date值  <br>　(在format字符串中可用标志符:  <br>　%m 月名字(january……december)    <br>　%w 星期名字(sunday……saturday)    <br>　%d 有英语前缀的月份的日期(1st, 2nd, 3rd, 等等。）    <br>　%Y 年, 数字, 4 位    <br>　%y 年, 数字, 2 位    <br>　%a 缩写的星期名字(sun……sat)    <br>　%d 月份中的天数, 数字(00……31)    <br>　%e 月份中的天数, 数字(0……31)    <br>　%m 月, 数字(01……12)    <br>　%c 月, 数字(1……12)    <br>　%b 缩写的月份名字(jan……dec)    <br>　%j 一年中的天数(001……366)    <br>　%H 24时制小时(00……23)    <br>　%k 小时(0……23)    <br>　%h 12时小时(01……12)    <br>　%i 小时(01……12)    <br>　%l 小时(1……12)    <br>　%i 分钟, 数字(00……59)    <br>　%r 时间,12 小时(hh:mm:ss [ap]m)    <br>　%t 时间,24 小时(hh:mm:ss)    <br>　%s 秒(00……59)       <br>　%p am或pm    <br>　%w 一个星期中的天数(0=sunday ……6=saturday ）        <br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select date_format(now(),&#x27;%Y年%m月%d日 %H时%i分%s秒&#x27;);<br></code></pre></td></tr></table></figure></blockquote></li></ol><hr></blockquote><h1 id="8-条件查询"><a href="#8-条件查询" class="headerlink" title="8. 条件查询"></a>8. 条件查询</h1><blockquote><p>什么是表达式 &#x3D; 由字面量或者变量以及运算符组成的合法的语句</p><p>字面量 - 字面的意思 - 常量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">int i = 10;<br>int result = i+100;<br></code></pre></td></tr></table></figure></blockquote><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select 语句<br>where 条件表达式<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&gt; &lt; = != &lt;&gt;  &gt;= &lt;=<br></code></pre></td></tr></table></figure><p>条件连接符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">and 连接多个条件的,都是true,返回结果行<br><br>or 只要存在一个为true的条件,则返回结果行<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>其他运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">between m and n       返回某列值在[m,n]之间<br><br>in(列表)  某列的值是否存在于(值1,值2,值3)  之间是一个或者的关系<br><br>not in(列表) 不在某个范围<br><br>is null 判断是否为空,mysql中不要使用=null<br><br>is not null 判断不为空  ,不要使用!=null<br></code></pre></td></tr></table></figure></blockquote><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><blockquote><ol><li><p>查询出有提成的员工的名字和提成率以及薪资</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,salary,commission_pct from s_emp where commission_pct is not null;<br></code></pre></td></tr></table></figure></li><li><p>把31部门,41部门以及42部门的员工全部找出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,dept_id from s_emp where dept_id in(31,41,42);<br>   <br>select first_name,dept_id from s_emp where dept_id=31 or dept_id=41 or dept_id=42;<br>   <br>-- 员工的名称以及员工所在的部门的名称<br>-- 涉及到多表查询<br>select e.first_name 员工,(<br>select d.name from s_dept d where e.dept_id = d.id<br>) 部门名 from s_emp e;<br>   <br>-- 翻译成for循环<br>for(int i=0;i&lt;25;i++)&#123;<br>for(int j=0;j&lt;12;j++)&#123;<br>  if(..)&#123;<br>        //直接输出<br>        Sytem.out.println(i+&quot;:&quot;+j);<br>    &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="9-课堂练习"><a href="#9-课堂练习" class="headerlink" title="9. 课堂练习"></a>9. 课堂练习</h1><blockquote><ol><li><p>查出在41部门的员工名字,工资</p></li><li><p>查出工资高于1500的员工的信息</p></li><li><p>找出工资大于1200元的员工全名、工资、职称</p></li><li><p>找出工资在1200到1500之间的员工名</p></li><li><p>找出工资大于1500并且没有提成的员工</p></li><li><p>找出名字长度超过5的员工</p></li><li><p>找出员工的工作月数</p></li><li><p>查询员工的工作天数</p></li><li><p>当前日期前六个月的最后一天</p></li><li><p><strong>把员工的入职日期格式化为年&#x2F;月&#x2F;日</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,date_format(start_date,&#x27;%Y/%m/%d&#x27;) from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>找出5月份入职的员工</p></li><li><p><strong>查出名字是以M打头的员工</strong></p></li><li><p><strong>查出姓名中第三个字母是e的员工</strong></p></li><li><p>找出费用超过10000元的订单编号及支付方式</p></li><li><p><strong>找出名字first_name中含有字母a的员工</strong></p></li></ol></blockquote><hr><h1 id="10-模糊查询"><a href="#10-模糊查询" class="headerlink" title="10. 模糊查询"></a>10. 模糊查询</h1><blockquote><ol><li>like - 匹配任意<strong>多个</strong>任意字符(包括0个)</li><li>_ 匹配任意<strong>单个</strong>字符</li></ol></blockquote><hr><blockquote><ol><li><p>找出名字first_name中含有字母e的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp where first_name like &#x27;%e%&#x27;;<br></code></pre></td></tr></table></figure></li><li><p><strong>查出名字是以M打头的员工</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp where first_name like &#x27;M%&#x27;;<br></code></pre></td></tr></table></figure></li><li><p><strong>查出姓名中第三个字母是e的员工</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp where first_name like &#x27;__e%&#x27;;<br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol><li><p>查找6月份入职的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,start_date from s_emp where start_date like &#x27;%-06-%&#x27;;<br><br>-- 推荐使用日期函数<br>select first_name,start_date from s_emp where month(start_date) = 6;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>拓展: 使用转义字符\</p><p>场景: 万一first_name本身的值就包含_或者%</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update s_emp set first_name=&#x27;Car_men&#x27; where id=1;<br>update s_emp set first_name=&#x27;Ma_rk&#x27; where id = 4;<br></code></pre></td></tr></table></figure><p>需求:查询出first_name中包含_的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name from s_emp where first_name like &#x27;%\_%&#x27;;<br><br>-- 补充,可以使用escape来定义一个临时的转义字符的<br>select first_name from s_emp where first_name like &#x27;%?_%&#x27; escape &#x27;?&#x27;;<br></code></pre></td></tr></table></figure></blockquote><hr><h1 id="11-排序"><a href="#11-排序" class="headerlink" title="11. 排序"></a>11. 排序</h1><blockquote><ol><li><p>升序</p><p>order by 排序列 [asc]</p></li><li><p>降序</p><p>order by 排序列 desc</p></li></ol></blockquote><blockquote><p>排序不建议使用的,真实开发中,还是推荐使用java排序的.</p><ol><li><p><strong>自动排序 - 插入的时候根据索引自动排序</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop table t_ord;<br>create table t_ord(<br>  -- 主键列默认就是索引列 - 主键索引<br>id int primary key,<br>  name varchar(20)<br>);<br>-- insert插入数据<br>insert into t_ord values(2,&#x27;tom&#x27;);<br>insert into t_ord values(1,&#x27;admin&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>根据工资进行排序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- order by 具体的列名<br>select first_name,salary from s_emp order by salary;<br><br>select first_name,salary from s_emp order by salary desc;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- order by 列别名<br>select first_name,salary sal_ from s_emp order by sal_;<br><br>select first_name,salary*12*(1+coalesce(commission_pct,0)/100) yearSal_ from s_emp<br>order by yearSal_;<br><br>-- 比较推荐的方式 - 排序性能得到优化的一种<br>-- order by 列的序号 - 序号从1开始<br>select first_name,salary*12*(1+coalesce(commission_pct,0)/100) 年薪 from s_emp<br>order by 2 desc;<br><br>-- 优先按照年薪降序排,如果年薪一致的时候,希望继续按照first_name升序排<br>select first_name,salary*12*(1+coalesce(commission_pct,0)/100) 年薪 from s_emp<br>order by 2 desc,1;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="12-数字和字符串之间的转换"><a href="#12-数字和字符串之间的转换" class="headerlink" title="12. 数字和字符串之间的转换"></a>12. 数字和字符串之间的转换</h1><blockquote><ol><li><p>字符串转数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- +是java中唯一重载[具备多个意义]的运算符<br><br>-- 将字符串转换成数字,然后进行加法运算<br>select &#x27;1&#x27;+0;<br></code></pre></td></tr></table></figure></li><li><p>数字转字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">concat函数<br>select concat(1,&#x27;&#x27;);<br></code></pre></td></tr></table></figure></li></ol></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>学习的第一天</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown</title>
    <link href="/2023/07/11/Markdown%E8%AF%AD%E6%B3%95/"/>
    <url>/2023/07/11/Markdown%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>markdown</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><blockquote><p>竖线大于号+空格</p><p>有序列表</p><ol><li>数字加点加空格</li><li></li></ol></blockquote><hr><blockquote><p>无序列表</p><ul><li>星号空格</li></ul></blockquote><hr><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">三个波浪线加语言名称写代码<br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><p>插入表格–CTRL+t</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table></blockquote><hr><blockquote><p><strong>加粗左右各两个星号</strong></p></blockquote><hr><blockquote><p><code>高亮显示</code></p></blockquote><hr><blockquote><p><em>左右各一个星号斜体</em></p></blockquote><hr><blockquote><p><img src="C:/Users/18047/Desktop/java/imag/图片路劲">导入图片</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java</title>
    <link href="/2023/07/10/java/"/>
    <url>/2023/07/10/java/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/10/hello-world/"/>
    <url>/2023/07/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
