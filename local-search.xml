<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>java-o1day</title>
    <link href="/2023/07/17/java-o1day/"/>
    <url>/2023/07/17/java-o1day/</url>
    
    <content type="html"><![CDATA[<h1 id="java介绍"><a href="#java介绍" class="headerlink" title="java介绍"></a>java介绍</h1><ol><li><p>爪哇 - 印度尼西亚的爪哇岛 - 盛产咖啡豆</p></li><li><p>前身叫做Oak语言 - 橡树,这个商标被一家显卡制造商提前注册了.</p></li><li><p>Java之父 - James Gosling - 詹姆斯 高斯林(搞死你)</p></li><li><p>原先是属于SUN(太阳)公司 - 优先被IBM公司 - “讨好sun公司 - eclipse(免费) - 日食”</p><p><code>sun不乐意 - 打官司 - 打输了</code></p></li><li><p>oracle公司[甲骨文] - 特殊的数据库产品[oracle] - 2019年以74亿美金收购的.</p></li><li><p>官网:<a href="http://www.oracle.com/">www.oracle.com</a></p></li><li><p>java语言是1995年5月23日正式诞生的.</p></li></ol><h1 id="java的三个体系"><a href="#java的三个体系" class="headerlink" title="java的三个体系"></a>java的三个体系</h1><ol><li>javase(j2se) - java standard edition - java标准版 - 包含了java的基础语法 - 传统的适合桌面应用程序的开发.</li><li>javaee(j2ee) - 更名了 - Jakarta 雅加达EE .. java enterprise edition - java企业版</li><li>javame(j2me) - java micro edition - java微型版 - 适合移动端的开发 - “夭折了”</li></ol><h1 id="java的特点"><a href="#java的特点" class="headerlink" title="java的特点"></a>java的特点</h1><blockquote><ol><li>简单易学</li><li><strong>跨(os)平台</strong> - 可移植性 - 与平台无关性</li><li>安全性 - 健壮性 &#x3D;&gt; 不需要维护指针</li><li>动态的语言 - <strong>解释型的语言</strong></li><li>多线程</li><li>分布式</li></ol></blockquote><h1 id="jdk下载地址"><a href="#jdk下载地址" class="headerlink" title="jdk下载地址"></a>jdk下载地址</h1><blockquote><p><a href="https://gitee.com/link?target=https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html">https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html</a></p><p>jdk的版本 - jdk1.0 …. <strong>jdk5.0[巨变]</strong> … jdk7.x[变化] - <strong>jdk8.x[目前最主流的]</strong> .. jdk11.x … <em><strong>jdk17.x[趋势]</strong></em></p></blockquote><blockquote><p>jdk - java development kit - java开发工具包 - 针对开发者使用的.</p></blockquote><hr><h2 id="jdk17环境变量配置"><a href="#jdk17环境变量配置" class="headerlink" title="jdk17环境变量配置"></a>jdk17环境变量配置</h2><blockquote><ol><li><p>解压到一个非中文的,不能带有特殊符号(比如空格)的目录.</p></li><li><p>桌面 - 计算机 - 右击属性 - 高级系统设置 - 环境变量 - 定位到<code>系统变量</code></p><ul><li><p>新建</p><p>变量名 JAVA_HOME</p><p>变量值 &#x2F;Users&#x2F;admin&#x2F;Downloads&#x2F;jdk-17.0.6(<code>自己电脑的jdk解压之后的绝对路径</code>)</p></li><li><p>找到内置的系统变量 - Path - 点击编辑 - 点击新建</p><p>%JAVA_HOME%\bin</p></li></ul></li><li><p>点击 - 确定 - 关闭所有的设置窗口</p></li><li><p>然后打开终端win+r - 输入cmd,<code>如果在进行环境变量设置之前,已经打开了终端,那么重启这个终端</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -version<br><br><span class="hljs-attribute">java</span> version <span class="hljs-string">&quot;17.0.6&quot;</span> <span class="hljs-number">2023</span>-<span class="hljs-number">01</span>-<span class="hljs-number">17</span> LTS<br><span class="hljs-attribute">Java</span>(TM) SE Runtime Environment (build <span class="hljs-number">17</span>.<span class="hljs-number">0</span>.<span class="hljs-number">6</span>+<span class="hljs-number">9</span>-LTS-<span class="hljs-number">190</span>)<br><span class="hljs-attribute">Java</span> HotSpot(TM) <span class="hljs-number">64</span>-Bit Server VM (build <span class="hljs-number">17</span>.<span class="hljs-number">0</span>.<span class="hljs-number">6</span>+<span class="hljs-number">9</span>-LTS-<span class="hljs-number">190</span>, mixed mode, sharing)<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="java的执行原理"><a href="#java的执行原理" class="headerlink" title="java的执行原理"></a>java的执行原理</h1><blockquote><p>jdk的解压之后的bin目录 - .exe结尾的都是开发工具.比较重要的<strong>javac.exe和java.exe</strong></p><ol><li>javac.exe - 将java源代码<strong>编译</strong>成字节码文件</li><li>java.exe - <strong>运行</strong>这个字节码文件[运行java程序]</li></ol></blockquote><hr><blockquote><ol><li><p>在桌面 - 右击新建一个文件 - HelloWorld.java(类文件)</p><p><code>确保计算机中的文件的后缀扩展名要显示的 - 磁盘 - 工具 - 扩展名打钩</code></p><p><code>否则可能创建出来的文件HelloWorld.java.txt文件</code></p></li><li><p>打开文件,进行编码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>单行注释 - 注释的代码是不会经过编译器进行编译的 =&gt; 程序员看的.<br><span class="hljs-regexp">//</span>public(公开的)和class(类)都是属于关键字 =&gt; 定义类<br><span class="hljs-regexp">//</span>此处的HelloWorld就是类名,类名必须和文件名高度保持一致.<br>public class HelloWorld&#123;<br>  <span class="hljs-regexp">//</span>程序的主入口 - <span class="hljs-string">&quot;大门&quot;</span><br>  <span class="hljs-regexp">//</span> main方法 - <span class="hljs-string">&quot;死记住语法&quot;</span><br>  public static void main(String[] args)&#123;<br>  <span class="hljs-regexp">//</span>方法体 - 现阶段 - 写代码的地方<br>    <span class="hljs-regexp">//</span>在控制台输出一句话<br>    <br>    <span class="hljs-regexp">//</span>注意:在整个编码环节中,所有的符号必须是英文模式下的.<br>    <span class="hljs-regexp">//</span>java代码一行结束之后必须使用;<br>    System.out.println(<span class="hljs-string">&quot;HelloWorld!&quot;</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>通过终端(win+r &#x3D;&gt; cmd)进入到桌面</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">User</span>/计算机名 - 用户的主目录<br><br>C:\<span class="hljs-keyword">User</span>\计算机名&gt;cd Desktop<br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol><li><p><strong>编译</strong>整个java源代码文件[以.java为后缀的文件]</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">C:</span>\User\计算机名\Desktop&gt;javac HelloWorld.java<br></code></pre></td></tr></table></figure><p><code>效果:只要语法没有问题,就会编译生成一个.class的字节码文件</code></p></li><li><p>运行的字节码文件</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">C:</span>\User\计算机名\Desktop&gt;java HelloWorld<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><p>总结: java程序的执行的基本原理:</p><ol><li><p>编写好程序之后,当执行javac.exe命令的时候,本质上是调用jdk中的编译器,将.java源代码文件编译成一个.class的字节码文件</p><p><code>为什么需要编译呢? - 因为计算机是不能够直接识别java语言编写的程序.</code></p></li><li><p>当执行java.exe命令的时候,本质上是调用jvm中的解释器,它会将.class字节码文件逐行翻译成机器语言.</p><p><code>jvm - java虚拟机 - 想象成是以.class字节码文件为指令的cpu</code></p></li></ol><h2 id="基本原理图"><a href="#基本原理图" class="headerlink" title="基本原理图"></a>基本原理图</h2><img src="/2023/07/17/java-o1day/java%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%86.png" class=""><ol><li>.class字节码文件是在java虚拟机中执行的.</li><li>一次编译,到处执行 - <strong>跨(os)平台</strong> - 可移植性 - 与平台无关性</li><li>JVM的位置在java语言开发好的应用程序与底层的os之间的那一层. jvm安装在os上的. 正是因为有了jvm,所以java才具备跨平台性.</li><li>jvm是不跨平台的.</li><li>jvm类似于”翻译官的角色”</li></ol><p> java-app - 中国人说的话</p><p>| 胖翻译 (jvm) |毛翻译(jvm)</p><p>鬼子 (os) 老毛子(os)</p><ol><li><p>思考 - java到底是属于编译型语言,还是属于解释型语言,还是属于半编译半解释型语言? - <strong>解释型</strong></p><p>C语言是属于编译型语言 - 编译型的真正的含义: 将开发语言编写好的程序可以一次性直接编译成我们os能够识别的语言.</p><p>比如c语言的开发的程序可以一次性直接编译成二进制可执行文件, 常见的.exe文件.</p><p>C语言不跨平台 - 特点: 一次编写,到处运行.</p></li><li><p>为什么java的运行速度没有C快???</p><ul><li>每次执行java.exe命令的时候,都会对.class文件进行逐行翻译.</li><li>C是一次性编译ok,后面直接运行的程序.</li></ul><p>举例: java执行 - 类似于 “点读笔”, C执行-&gt;一次翻译好了中文</p></li></ol><h1 id="类命名的规范"><a href="#类命名的规范" class="headerlink" title="类命名的规范"></a>类命名的规范</h1><blockquote><p>类是java的基本单元.</p><ol><li><p>必须要遵守的</p><ul><li><p>类名只能由字母 or 数字 or 下划线 or $组成,但是不能由数字开头.</p></li><li><p>类名不能是java中的关键字(<code>关键字</code> - 某些含有语法含义的单词)</p><p><code>if,for,byte,short,int,long ,float,double,char,enum...</code></p></li><li><p>类名不能是java中内置的<strong>对象类型</strong>(比如System,String,Scanner,Date…)</p></li><li><p>类名同样不能是以下三个字面量,true,false,null</p></li><li><p>类名不能是java中的保留关键字goto</p></li></ul></li><li><p>推荐遵守</p><ul><li><p>类名采用”大驼峰” - 首字母要大写,其余单词小写.如果类名由多个单词组成,每个单词的首字母都要大写.</p><p>比如HelloWorld,StudentSystem…</p></li><li><p>不推荐使用中文.防止出现中文乱码问题.</p></li><li><p>不能使用中文拼音</p></li><li><p>提倡见名知意 - 提高程序的可读性.</p></li></ul></li></ol></blockquote><hr><h1 id="jdk和jvm以及jre"><a href="#jdk和jvm以及jre" class="headerlink" title="jdk和jvm以及jre"></a>jdk和jvm以及jre</h1><blockquote><p>三者之间的区别和联系</p></blockquote><blockquote><ol><li><p>jvm - java virtual machine - java虚拟机 - 跨平台 - 本身就是C语言写的.</p></li><li><p>jre - Java Runtime Environment - java运行时环境,针对java程序的使用者来讲的.</p><p>如果仅仅只是想要运行一个java开发好的程序,那么只需要在计算机中安装jre即可.</p><p>jre包括一些核心的内库以及jvm,所以jre是包括jvm</p><p>jre &#x3D; 核心内库 + jvm</p></li><li><p>jdk - java development kit - java开发工具包 - 包括一些开发工具javac.exe,java.exe,jar.exe,javadoc.exe,javap.exe等等</p><p>针对开发者使用的.jdk包括开发工具以及jre,所以jdk &#x3D; 开发工具 + jre</p></li></ol></blockquote><hr><h1 id="包package"><a href="#包package" class="headerlink" title="包package"></a>包package</h1><blockquote><p>包对于类的作用就类似于文件夹对文件的作用 - 对类文件进行分类管理的.在磁盘中就是一个文件夹.</p><p>企业中对包的命名规范</p><ol><li><p>个人发布的,但是不是独立完成的.</p><p>indi.发布者名称.项目名称.模块名称</p></li><li><p>个人发布 - 个人独立完成的</p><p>pers.个人名称.项目名称.模块名称</p></li><li><p>个人完成 - 但是没有公开的</p><p>pri.个人名称.项目名称.模块名称</p></li><li><p>团队项目</p><p>team.项目名称.模块名称</p></li><li><p>公司项目 - 一般是采用公司域名倒置的写法.比如百度 - com.baidu.</p><p>tech.aistar</p></li></ol></blockquote><hr><blockquote><p>包的命名规范</p><ol><li><p>可以有数字或者字母开头</p></li><li><p>可以由数字,字母,下划线还有$组成.</p></li><li><p>不能是java中的关键字</p></li><li><p>不能包含java单词.</p></li><li><p>如果包名有多个层次,推荐采用小写字母,并且各个单词之间用.隔开.</p></li><li><p>一旦有了包存在,那么类文件中的首行就会出现声明包的语句</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">package</span> <span class="hljs-title class_">tech.aistar.day01</span>;<span class="hljs-comment">//must be first line</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="java中三种注释"><a href="#java中三种注释" class="headerlink" title="java中三种注释"></a>java中三种注释</h1><blockquote><ol><li><p>单行注释</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 解释单行的代码<br></code></pre></td></tr></table></figure></li><li><p>多行注释</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">       多行注释</span><br><span class="hljs-comment">       多行注释</span><br><span class="hljs-comment">    */</span><br></code></pre></td></tr></table></figure></li><li><p>文档注释 - 后期学习了javadoc.exe(生成我们的api文档) - 文档注释都是可以生效的.</p><ol><li>负责解释类的作用</li><li>负责解释方法的作用</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">/**<br><span class="hljs-bullet"> *</span> 本来用来演示: HelloWorld<br><span class="hljs-bullet"> *</span><br> * @author success<br><span class="hljs-bullet"> *</span> @date 2023/7/17 14:31:25<br> <span class="hljs-emphasis">*/</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="关于main方法中的虚拟机参数"><a href="#关于main方法中的虚拟机参数" class="headerlink" title="关于main方法中的虚拟机参数"></a>关于main方法中的虚拟机参数</h1><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span> </span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;i&lt;args.length;i++)&#123;<br>     System.out.<span class="hljs-built_in">println</span>(args[i]);<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>正常编译javac HelloWorld.java</p><p>运行并且进行传参java Hello 我们 123 abc</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><blockquote><p><strong>java中是采用数据类型和变量来定义和存储数据的</strong>.<code>并且所有的基本类型都是存在在jvm内存的栈区</code></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">栈区特点 - 先进后出 - 读写速度比较快<br>速度快的本质 - <span class="hljs-keyword">java是一门强类型的语言 </span>- 在编译期间就必须要确定变量的数据类型<br></code></pre></td></tr></table></figure><p>不同的数据类型所占的内存的大小是不一样的.编译期间确定好的类型,不能够改变了.势必会造成空间的浪费.空间一旦浪费,时间[效率]就会提高 - 以空间换时间…</p></blockquote><blockquote><p>java中数据类型分成两大类</p><ol><li><p>基本数据类型</p><ul><li><p>比较主流的说法是<strong>八种</strong></p><p>byte,short,int,long,float,double,char,boolean</p></li><li><p>编程思想 - 把void归纳为基本数据类型 - 九种</p></li></ul></li><li><p>对象类型(无数种) - 包括内置对象类型以及自定义对象类型</p></li></ol></blockquote><hr><blockquote><p>针对八种基本数据类型</p><table><thead><tr><th></th><th>名称</th><th>字节数&#x2F;位数</th><th>范围</th><th>默认值</th></tr></thead><tbody><tr><td>byte</td><td>字节</td><td>1个字节 - 8bit</td><td>[-128,127]</td><td>0</td></tr><tr><td>short</td><td>短整型</td><td>2个字节 - 16bit</td><td>[-2^15,2^15-1]</td><td>0</td></tr><tr><td>int</td><td>整型</td><td>4个字节 - 32bit</td><td>[-2^31,2^31-1]</td><td>0</td></tr><tr><td>long</td><td>长整型</td><td>8个字节 - 64bit</td><td>[-2^61,2^61-1]</td><td>0L</td></tr><tr><td>float</td><td>单精度浮点数</td><td>4个字节 - 32bit</td><td>-3.4<em>10^38 - 3.4</em>10^38</td><td>0.0f</td></tr><tr><td>double</td><td>双精度浮点数</td><td>8个字节 - 64bit</td><td>-1.7<em>10^308 , 1.7</em>10^308</td><td>0.0d</td></tr><tr><td>char</td><td>字符</td><td>2个字节- 16bit</td><td>[\u0000,\uffff]或者[0,65535]</td><td>\u0000,空(“”)</td></tr><tr><td>boolean</td><td>布尔类型</td><td>1个字节 - 8bit</td><td>true&#x2F;false</td><td>false</td></tr></tbody></table></blockquote><h2 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h2><blockquote><p>参考类名 - 唯一的不同点 - “小驼峰命名” - - 首字母要小写,其余单词小写.如果类名由多个单词组成,每个单词的首字母都要大写.</p><p>类名,包名,变量名,方法名,接口名 &#x3D;&gt; 标识符</p></blockquote><h2 id="定义变量的语法"><a href="#定义变量的语法" class="headerlink" title="定义变量的语法"></a>定义变量的语法</h2><blockquote><ol><li><p>数据类型 变量名 [&#x3D; 初始值];</p></li><li><p>可以先定义变量,然后进行赋值,并且可以多次赋值</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">int a<span class="hljs-comment">;</span><br><span class="hljs-attribute">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-comment">;</span><br><span class="hljs-attribute">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol><li>变量在使用之前必须要先初始化&#x2F;定义.</li><li>同{}中不能出现同名的变量</li><li>变量仅仅能在自己所在的{}中使用,这是变量的使用作用域的概念</li></ol></blockquote><h2 id="变量的赋值方式"><a href="#变量的赋值方式" class="headerlink" title="变量的赋值方式"></a>变量的赋值方式</h2><blockquote><ol><li><p>定义变量的同时进行赋值</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">int a <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></li><li><p>先定义变量,然后再进行赋值</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">int a<span class="hljs-comment">;</span><br><span class="hljs-attribute">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></li><li><p>通过表达式进行赋值.<code>表达式 - 由变量或者字面量以及运算符能组成的合法的语句</code></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">int a</span>  =10;<br><span class="hljs-attribute">int result</span> = a + 20;<br></code></pre></td></tr></table></figure></li><li><p>链式赋值</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> x,y,z = <span class="hljs-number">10</span>;<br><span class="hljs-comment">//仅仅是对z赋值了,x和y仅仅是定义了,尚未初始化</span><br><br><span class="hljs-comment">//同时声明了n个变量</span><br><span class="hljs-built_in">int</span> t1,t2,t3;<br>t1 = t2 = t3 = <span class="hljs-number">90</span>;<br></code></pre></td></tr></table></figure></li><li><p>可以通过方法进行赋值</p></li></ol></blockquote><hr><h1 id="类型的转换"><a href="#类型的转换" class="headerlink" title="类型的转换"></a>类型的转换</h1><ol><li><p>支持自动类型的转换 - 小的数据类型可以自动转换成大的数据类型</p><p>byte-&gt;short-&gt;int-&gt;long</p><p>char-&gt;int</p><p>int-&gt;double</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yuke-04day</title>
    <link href="/2023/07/13/yuke-04day/"/>
    <url>/2023/07/13/yuke-04day/</url>
    
    <content type="html"><![CDATA[<h1 id="1-软件"><a href="#1-软件" class="headerlink" title="1. 软件"></a>1. 软件</h1><ol><li>vscode<ul><li>前端的开发工具,主流的还有webstorm以及hbuilder</li></ul></li><li>chrome<ul><li>浏览器,前端的调试工具,支持w3cshool标准最好的一款浏览器</li><li>firefox浏览器 - 火狐</li></ul></li><li>安装 - Vue.js devtools</li></ol><hr><h1 id="2-安装科学上网"><a href="#2-安装科学上网" class="headerlink" title="2. 安装科学上网"></a>2. 安装科学上网</h1><p>略…</p><h1 id="3-vue介绍"><a href="#3-vue介绍" class="headerlink" title="3. vue介绍"></a>3. vue介绍</h1><blockquote><p>重点性 - 简历加分项 + 后端硬性招聘要求</p><p><strong>前后端工作是分离的,但是人没有分离的.</strong></p></blockquote><blockquote><p>H5[前端体系的总称]是从2014年兴起的 - 4G普及 5G兴起推动了物联网+ai的发展 - 比如无人驾驶技术(智慧城市)</p></blockquote><hr><blockquote><p>vue是用来构建用户界面的一个渐进式框架</p><ol><li>构建用户界面 - 将用户手中的数据通过某种方式,能够呈现出来.</li><li>渐进式 - vue是自底向上的逐层应用,如果体量比较小的,只需要简单的轻量级的插件库即可.如果比较大,可以继续添加另外的插件库.</li></ol></blockquote><hr><blockquote><p>发展史</p><ol><li><strong>vue2.x - 入门</strong><ul><li>最新稳定版本：2.7.14</li><li>旧版本 - 2.6.x</li></ul></li><li>vue3.x - 趋势</li></ol></blockquote><hr><blockquote><p>vue2中文学习文档 - <a href="https://gitee.com/link?target=https://v2.cn.vuejs.org/">https://v2.cn.vuejs.org/</a></p><p>下载vue.js</p></blockquote><hr><h2 id="1-vue优点"><a href="#1-vue优点" class="headerlink" title="1. vue优点"></a>1. vue优点</h2><blockquote><p>传统的仍然是使用javascript原生的技术或者使用javascript[简称js]的框架jquery.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">//模拟一个data - 动态改变的 - 肯定是来自于db表中的数据</span></span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;没有vue&#x27;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">//只能通过js操作dom</span></span><br><span class="language-javascript">        <span class="hljs-comment">//1. 获取dom元素 - 根据id属性的值来获取</span></span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> div = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;app&quot;</span>)</span><br><span class="language-javascript">        <span class="hljs-comment">//2. 调用调用属性  -  访问/设置</span></span><br><span class="language-javascript">        div.<span class="hljs-property">innerHTML</span>=<span class="hljs-string">&quot;hello-&quot;</span>+data</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><ol><li><p>vue出现解放了程序员用js操作dom的双手</p><p><code>采用的是声明式编码,不再需要js去操作dom了,比较方便</code></p></li><li><p>采用组件化编程的方式.提高组件的复用性</p><img src="/2023/07/13/yuke-04day/%E7%BB%84%E4%BB%B6%E5%BC%8F.png" class=""> 3.采用的是虚拟DOM+diff算法,复用dom节点,提高效率<img src="/2023/07/13/yuke-04day/Diff.png" class=""></li></ol></blockquote><hr><h1 id="4-vscode环境"><a href="#4-vscode环境" class="headerlink" title="4. vscode环境"></a>4. vscode环境</h1><blockquote><p>下载地址:<a href="https://gitee.com/link?target=https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><p>下载必要的插件</p><ol><li><p>open in browser</p><p>本地协议的方式打开html文件</p></li><li><p><strong>Live Server</strong> - 启动一个轻量级的服务器</p><p><strong>使用http协议来请求访问我们的html文件</strong></p></li></ol></blockquote><hr><blockquote><ol><li><p>新建一个文件夹yuke-vue</p><p><code>项目的根目录</code></p></li><li><p>打开vscode - 菜单栏file - open Folder</p></li><li><p>在项目的根目录下新建一个plugins目录 - 然后将vue.js拷贝进去.</p></li></ol></blockquote><p>--</p><h1 id="5-vue-体验"><a href="#5-vue-体验" class="headerlink" title="5. vue-体验"></a>5. vue-体验</h1><blockquote><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 定义一个div的容器,必须要给定一个唯一的id属性的值</span></span><br><span class="hljs-comment"><span class="language-xml">         并且一个页面中只能有一个容器</span></span><br><span class="hljs-comment"><span class="language-xml">    --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span></span><br><span class="language-xml">        hello-</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">msg</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 如果页面中存在多个id相同的容器的时候,只有第一个是生效的 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- &lt;div id=&quot;app&quot;&gt;</span></span><br><span class="hljs-comment"><span class="language-xml">        hello-</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">msg</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-comment"></span></span><br><span class="hljs-comment"><span class="language-xml">    &lt;/div&gt; --&gt;</span></span><br><span class="language-xml">    </span><br><span class="language-xml">    <span class="hljs-comment">&lt;!--   引入vue.js --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;plugins/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 定义了一个vue的实例</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 一个页面只能有唯一的一个vue实例</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// vue实例是对应一个容器,通过el属性来进行绑定的</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#app&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">// 定义的data中的数据,它是可以流向到页面的</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">// 并且只要data中数据的改变了,页面都会重新渲染</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">msg</span>:<span class="hljs-string">&#x27;学习vue&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure><hr><p>测试**: 开发中的data是动态改变的,模板中使用到该数据的地方都会重新渲染** - 为什么data数据要交给vue实例来管理.</p></blockquote><hr><p>总结:</p><ol><li><p>一个页面中如果出现多个相同容器,一个vue实例的时候,默认是第一个容器是渲染成功的.</p></li><li><p>一个容器应该只对应vue实例</p></li><li><p>vue实例的el属性值对应容器的id属性值</p></li><li>中的xxx是一个js表达式,也可以是<p>vue实例上的东西</p><ul><li>js表达式 - 是可以产生具体的值的 1+2</li><li>js代码 - if语句,while语句</li><li>js表达式也是一种特殊的js代码</li></ul></li></ol><hr><h1 id="6-vscode中设置一下代码的片段"><a href="#6-vscode中设置一下代码的片段" class="headerlink" title="6. vscode中设置一下代码的片段"></a>6. vscode中设置一下代码的片段</h1><blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs css">&quot;Print <span class="hljs-selector-tag">to</span> console&quot;: &#123;<br>&quot;scope&quot;: <span class="hljs-string">&quot;javascript,typescript&quot;</span>,<br><span class="hljs-string">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;vv&quot;</span>,<br><span class="hljs-string">&quot;body&quot;</span>: [<br><span class="hljs-string">&quot;new Vue(&#123;&quot;</span><br><span class="hljs-string">&quot;    el:&#x27;#app&#x27;,&quot;</span><br><span class="hljs-string">&quot;    data:&#123;&quot;</span><br><br><span class="hljs-string">&quot;    &#125;&quot;</span><br><br><span class="hljs-string">&quot;&#125;);&quot;</span><br>],<br><span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;Log output to console&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;Print to console&quot;</span>: &#123;<br> <span class="hljs-string">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;cls&quot;</span>,<br> <span class="hljs-string">&quot;body&quot;</span>: [<br> <span class="hljs-string">&quot;console.log(&#x27;<span class="hljs-variable">$1</span>&#x27;);&quot;</span>,<br><span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>],<br><span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;Log output to console&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></blockquote><hr><h1 id="7-插值写法和指令写法"><a href="#7-插值写法和指令写法" class="headerlink" title="7. 插值写法和指令写法"></a>7. 插值写法和指令写法</h1><ol><li><p>插值写法 - 功能是用来解析标签体内容的</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">开始标签</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">data</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">结束标签</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><p>指令写法 - 功能是用来解析标签的(绑定标签的属性,绑定标签的事件)</p><p><strong>v-bind</strong> v-model v-on v-for v-if v-show &#x3D;&gt; v-指令名称</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">v-<span class="hljs-keyword">bind</span>是单向绑定 - 数据流只能从<span class="hljs-keyword">data</span>流向页面.<br></code></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 1. 插值写法 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>hello-</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">city</span>&#125;&#125;</span><span class="language-xml">-</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">name</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 超链接 </span></span><br><span class="hljs-comment"><span class="language-xml">        通过指令的写法来绑定href值</span></span><br><span class="hljs-comment"><span class="language-xml">        --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-bind:href</span>=<span class="hljs-string">&quot;site.url&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">site.wname</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- v-bind:href可以简写成:href --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">:href</span>=<span class="hljs-string">&quot;site.url&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">site.wname</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;plugins/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#app&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// key:value</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">// json对象的格式   &#123;key1:value1,key2:value2,key3:value3&#125;</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//value都是字符串类型,js单/双引号都是允许表示字符串的</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">city</span>:<span class="hljs-string">&#x27;SuZhou&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;aistar&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-comment">//关于value允许是一切类型,那么value又可以是一个json对象.</span></span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">site</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">url</span>:<span class="hljs-string">&#x27;http://www.baidu.com&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                    <span class="hljs-attr">wname</span>:<span class="hljs-string">&#x27;百度一下&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ol><h1 id="8-单向绑定和双向绑定"><a href="#8-单向绑定和双向绑定" class="headerlink" title="8. 单向绑定和双向绑定"></a>8. 单向绑定和双向绑定</h1><ol><li>单向绑定:数据只能从data流向页面</li><li>双向绑定:数据不仅可以从data流向页面,还可以从页面流向data</li><li>双向绑定一般应用表单元素上(比如input&#x2F;select等等)</li><li>双向绑定语法v-model:value可以写成成v-model,默认收集的就是value属性值.</li></ol><hr><blockquote><p>代码</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 单向绑定-数据只能从data流向页面 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-bind:value</span>=<span class="hljs-string">&quot;single&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 双向绑定:数据不仅可以从data流向页面,还可以从页面流向data --&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model:value</span>=<span class="hljs-string">&quot;two&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- v-model:value可以简写成v-model,默认收集的就是value属性值 --&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;two&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">        <span class="hljs-comment">&lt;!-- 插值语法 --&gt;</span></span><br><span class="language-xml">        </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">two</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;plugins/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#app&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">single</span>:<span class="hljs-string">&#x27;单向&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-attr">two</span>:<span class="hljs-string">&#x27;双向&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure></blockquote><hr><h1 id="9-数据代理"><a href="#9-数据代理" class="headerlink" title="9. 数据代理"></a>9. 数据代理</h1><blockquote><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">hello-</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">msg</span>&#125;&#125;</span><span class="language-xml">  </span><br><span class="language-xml"></span><br><span class="language-xml">vue实例上的 </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">_data.msg</span>&#125;&#125;</span><br></code></pre></td></tr></table></figure></blockquote><hr><h2 id="1-java中的代理"><a href="#1-java中的代理" class="headerlink" title="1. java中的代理"></a>1. java中的代理</h2><ol><li><p>正向代理</p><p>客户端明确知道服务器的地址,但是没有办法进行直接的访问.需要通过代理服务器进行访问.</p><p>client[浏览器] &#x3D;&gt; 输入网址(发送请求) &#x3D;&gt; 代理服务器 &#x3D;&gt; 转发到目标服务器</p><p><strong>服务器是不知道具体的客户端的位置的.</strong></p><p><strong>正向代理-代理的是客户端</strong></p></li><li><p><strong>反向代理</strong></p><p>场景: client &#x3D;&gt; taobao.com(背后有n个服务为taobao.com服务的)</p><p>client &#x3D;&gt; 发送请求taobao.com[代理服务器的地址] &#x3D;&gt; 代理server互换后台的那些N个服务[每个服务都有接口地址] </p><p><strong>客户端是不知道具体的服务器的位置的</strong></p><p><strong>反向代理 - 代理的服务器(nginx)</strong></p><p>原因:为了真实的server的安全.</p></li></ol><h2 id="2-Object-defineProperty"><a href="#2-Object-defineProperty" class="headerlink" title="2. Object.defineProperty"></a>2. Object.defineProperty</h2><blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">//比如定义一个json对象</span></span><br><span class="language-javascript">  <span class="hljs-keyword">let</span> user=&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;qiqi&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">sex</span>:<span class="hljs-string">&#x27;F&#x27;</span></span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(user,<span class="hljs-string">&#x27;age&#x27;</span>,&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">value</span>:<span class="hljs-number">18</span></span><br><span class="language-javascript">  &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">//遍历/迭代对象中所有的属性</span></span><br><span class="language-javascript">  <span class="hljs-comment">//age默认是不可被迭代</span></span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(user));</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k <span class="hljs-keyword">in</span> user)&#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(k);      </span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>浏览器控制台</p><img src="/2023/07/13/yuke-04day/dp01.png" class=""><ol><li><p>使用 Object.defineProperty定义的属性是灰色的.</p><p>代表这个属性不可被迭代&#x2F;遍历</p></li><li><p>默认是不可被删除的</p><img src="/2023/07/13/yuke-04day/dp02.png" class=""><p>3.默认不可被修改</p><img src="/2023/07/13/yuke-04day/dp03.png" class=""><hr><p>配置项讲解,让Object.defineProperty定义的属性可以被迭代,修改,删除</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html">Object.defineProperty(user,&#x27;age&#x27;,&#123;<br>  value:18,<br>  // 配置项<br>  //可以被修改<br>  writable:true,<br>  // 可以被删除<br>  configurable:true,<br>  //可以被枚举/遍历/迭代<br>  enumerable:true<br>&#125;)<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">代码2<br></code></pre></td></tr></table></figure><p>效果: 修改age的值,能够对num造成影响</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">//定义一个num</span></span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> num = <span class="hljs-number">18</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">//比如定义一个json对象</span></span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> user=&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;qiqi&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">sex</span>:<span class="hljs-string">&#x27;F&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-comment">// 修改num值,不会对age造成任何影响</span></span><br><span class="language-javascript">            <span class="hljs-comment">// age:num</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">//&quot;错误的视觉&quot;  -  修改num的值,好像是可以影响age</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">//num是age的代理</span></span><br><span class="language-javascript">        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(user,<span class="hljs-string">&#x27;age&#x27;</span>,&#123;</span><br><span class="language-javascript">           <span class="hljs-comment">//修改age-对num造成影响</span></span><br><span class="language-javascript">          </span><br><span class="language-javascript">           <span class="hljs-comment">//调用/访问age的值的时候,getter方法就会走   </span></span><br><span class="language-javascript">           <span class="hljs-comment">//user.age</span></span><br><span class="language-javascript">           <span class="hljs-comment">//点击age:省略号  - 走一次getter</span></span><br><span class="language-javascript">           <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;getter...&#x27;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> num;</span><br><span class="language-javascript">           &#125;,</span><br><span class="language-javascript">           <span class="hljs-comment">//只要修改age的值,那么就会调用setter方法</span></span><br><span class="language-javascript">           <span class="hljs-title function_">set</span>(<span class="hljs-params">v</span>)&#123;</span><br><span class="language-javascript">             <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;修改的值是:&#x27;</span>+v);   </span><br><span class="language-javascript">             num = v;</span><br><span class="language-javascript">           &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><hr><h2 id="3-数据代理简单示例"><a href="#3-数据代理简单示例" class="headerlink" title="3. 数据代理简单示例"></a>3. 数据代理简单示例</h2><blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">let</span> obj1 = &#123;<span class="hljs-attr">x</span>:<span class="hljs-number">10</span>&#125;</span><br><span class="language-javascript"><span class="hljs-keyword">let</span> obj2 = &#123;<span class="hljs-attr">y</span>:<span class="hljs-number">20</span>&#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">//需求</span></span><br><span class="language-javascript"><span class="hljs-comment">//1.通过Object.defineProperty给obj2新增一个属性x</span></span><br><span class="language-javascript"><span class="hljs-comment">//2. 效果: 用obj2.x来代理obj1这个对象中的x</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-comment">//修改obj2.x的值,期望obj1.x也会跟着后面变化</span></span><br><span class="language-javascript"><span class="hljs-comment">//数据代理:通过一个对象来代理另外一个对象中属性的操作[读/写]</span></span><br><span class="language-javascript"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(obj2,<span class="hljs-string">&#x27;x&#x27;</span>,&#123;</span><br><span class="language-javascript">  <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">return</span> obj1.<span class="hljs-property">x</span></span><br><span class="language-javascript">  &#125;,</span><br><span class="language-javascript">  <span class="hljs-title function_">set</span>(<span class="hljs-params">v</span>)&#123;</span><br><span class="language-javascript">    obj1.<span class="hljs-property">x</span> = v; </span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></blockquote><hr><h2 id="4-vue中的数据代理"><a href="#4-vue中的数据代理" class="headerlink" title="4. vue中的数据代理"></a>4. vue中的数据代理</h2><blockquote><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>地址:</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">address</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>名称:</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">name</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;plugins/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#app&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">data</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">address</span>:<span class="hljs-string">&#x27;苏州&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;admin&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><code>证明vm实例身上的_data就是js代码中的data</code>,但是直接输入vm._data&#x3D;&#x3D;data报错</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xquery">VM269:<span class="hljs-number">1</span> Uncaught ReferenceError: data <span class="hljs-literal">is</span><span class="hljs-built_in"> not</span> defined<br>    <span class="hljs-keyword">at</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">anonymous</span>&gt;</span>:1:11</span><br><span class="language-xml">技巧</span><br><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">let</span> data = </span></span><span class="language-xquery">&#123;</span><br><span class="language-xquery">    address:<span class="hljs-string">&#x27;苏州&#x27;</span>,</span><br><span class="language-xquery">   <span class="hljs-built_in"> name</span>:<span class="hljs-string">&#x27;admin&#x27;</span></span><br><span class="language-xquery">  &#125;</span><span class="language-xml"><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(</span></span><span class="language-xquery">&#123;</span><br><span class="language-xquery">  el:<span class="hljs-string">&#x27;#app&#x27;</span>,</span><br><span class="language-xquery">  // data:data</span><br><span class="language-xquery">  // 简写</span><br><span class="language-xquery">  data</span><br><span class="language-xquery">&#125;</span><span class="language-xml"><span class="language-javascript">);</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>vm._data&#x3D;&#x3D;data返回true</p><p>原理</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">Object.defineProperty(vm,<span class="hljs-string">&#x27;address&#x27;</span>,&#123;<br>  <span class="hljs-keyword">get</span>()&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">data</span>中的address<br>  &#125;<br>&#125;)<br><br>vm.address实际上访问的就是<span class="hljs-keyword">data</span>中的address<br></code></pre></td></tr></table></figure></blockquote><hr><p>图示</p><img src="/2023/07/13/yuke-04day/%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%90%86%E5%9B%BE%E7%A4%BA.png" class=""><blockquote><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">&gt;虽然<span class="hljs-meta">data</span>就是_<span class="hljs-meta">data</span>,底层做了数据劫持[此处_<span class="hljs-meta">data</span>是对<span class="hljs-meta">data</span>功能上面做了升级的],数据是可以流向页面的<br></code></pre></td></tr></table></figure></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>学习第四天</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql练习</title>
    <link href="/2023/07/12/mysql%E7%BB%83%E4%B9%A0/"/>
    <url>/2023/07/12/mysql%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>1.查出在10部门的员工名字,工资</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ename,salary from emp where deptno = 10;<br></code></pre></td></tr></table></figure><p>2.找出工资大于1200元的员工全名、工资、职称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ename,salary,job from emp where salary &gt;1200;<br></code></pre></td></tr></table></figure><p>3.查出在10，30部门的员工名,薪水</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ename,salary from emp where deptno = 10 or deptno = 30;<br></code></pre></td></tr></table></figure><p>4.找出工资大于1500并且没有提成的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from emp where salary &gt; 1500 and comm is null;<br></code></pre></td></tr></table></figure><p>5.查出名字是以M打头的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from emp where ename like &quot;M%&quot;;<br></code></pre></td></tr></table></figure><p>6.查出姓名中第三个字母是e的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from emp where ename like &quot;__e%&quot;;<br></code></pre></td></tr></table></figure><p>7.找出没有提成率的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from emp where comm is null;<br></code></pre></td></tr></table></figure><p>8.找出工资在950(含)至1200(含)元的员工姓名、职称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ename,job from emp where salary between 950 and 1200;<br></code></pre></td></tr></table></figure><p>9.找出2月份入职的员工名、入职时间、工资</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ename,hiredate,salary from emp where month(hiredate) = 2;<br></code></pre></td></tr></table></figure><p>查询出所有员工的职位，不重复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select distinct job from emp;<br></code></pre></td></tr></table></figure><p>查询出各个部门的员工数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select deptno,count(*) zonji from emp group by deptno;<br></code></pre></td></tr></table></figure><p>– 查询出各年份入职的员工情况（年份，员工人数）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select year(hiredate) as year,count(*) renshu from emp group by year(hiredate) order by year(hiredate);<br></code></pre></td></tr></table></figure><p>– 查询出每年每月入职的员工情况（年份月份，员工人数）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select year(hiredate) as year,month(hiredate) as month, count(*) renshu from emp group by year(hiredate),month(hiredate) order by year(hiredate),month(hiredate);<br></code></pre></td></tr></table></figure><p>【1. 字符函数】<br>    1.获得’goodmorning’ 的字符长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select char_length(&#x27;goodmorning&#x27;);<br></code></pre></td></tr></table></figure><p>?2.将Hello全部转换成小写字母</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select lower(&#x27;Hello&#x27;);<br></code></pre></td></tr></table></figure><p>?3.将Hello全部转换成大写字母</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select upper(&#x27;Hello&#x27;);<br></code></pre></td></tr></table></figure><p>?4.将hello首字母变为大写字母 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select concat(ucase(left(&#x27;hello&#x27;, 1)), substring(&#x27;hello&#x27;, 2)) as capitalized_string;<br></code></pre></td></tr></table></figure><p>?5.将’hello’ 与 ‘tom’  ,’good’拼接成一个单词</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select concat(&#x27;hello&#x27;,&#x27;tom&#x27;,&#x27;good&#x27;) AS concatenated_word;<br></code></pre></td></tr></table></figure><p>?6.获得’goodmorning’ 的第4 个字母</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select substring(&#x27;goodmorning&#x27;,4,1);<br></code></pre></td></tr></table></figure><p>?7.截取’goodmorning’ 的moring 单词</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select substring(&#x27;goodmorning&#x27;,5);<br></code></pre></td></tr></table></figure><p>?8.截取’Good  morning ！I’m Tom ‘   中的’o’ 用’A’来替代</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select replace(&#x27;Good  morning ！I\&#x27;m Tom &#x27;,&#x27;o&#x27;,&#x27;A&#x27;);<br></code></pre></td></tr></table></figure><p>【2. 日期函数】<br>1.获得当前日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select now();<br></code></pre></td></tr></table></figure><ol start="2"><li><p>获得某一个日期的年份，月份，日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select curdate();<br></code></pre></td></tr></table></figure></li><li><p>获得某一个日期的星期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select weekday(now());<br></code></pre></td></tr></table></figure></li><li><p>获得当前日期的时分秒</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select curtime();<br></code></pre></td></tr></table></figure></li><li><p>获得2天后的日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select date_add(curdate(),interval 2 day);<br></code></pre></td></tr></table></figure></li><li><p>获得前2天的日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select date_sub(curdate(),interval 2 day);<br></code></pre></td></tr></table></figure></li><li><p>获得两个日期相差的年份，月份，天数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select datediff(&#x27;20230711&#x27;,&#x27;20230713&#x27;);<br></code></pre></td></tr></table></figure></li></ol><p>【3. 数值函数】<br>1.获得38934.4383的整数部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select floor(38934.4383);<br></code></pre></td></tr></table></figure><p>2.将38934.4387的保留2位小数，不需要四舍五入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select truncate(38934.4389,2);<br></code></pre></td></tr></table></figure><p>3.将38934.4387的保留2位小数，需要四舍五入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select round(38934.4387,2);<br></code></pre></td></tr></table></figure><p>4.获得不小于38934.4383的最小正整数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ceiling(38934.4383);<br></code></pre></td></tr></table></figure><p>5.获得不大于38934.4383的最大的正整数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select floor(38934.4383);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>好好学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yukethreeday</title>
    <link href="/2023/07/12/yukethreeday/"/>
    <url>/2023/07/12/yukethreeday/</url>
    
    <content type="html"><![CDATA[<h1 id="1-多行函数"><a href="#1-多行函数" class="headerlink" title="1. 多行函数"></a>1. 多行函数</h1><blockquote><p>分组函数</p></blockquote><blockquote><ol><li><p>count - 统计数量 - 跳过null值,重复的数据(有一个算一个)</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(*) <span class="hljs-keyword">from</span> s_emp;<br><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id) <span class="hljs-keyword">from</span> s_emp <span class="hljs-built_in">e</span>;<br></code></pre></td></tr></table></figure></li><li><p>sum - 求和 - 跳过null值</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> <span class="hljs-keyword">sum</span>(salary) <span class="hljs-keyword">from</span> s_emp;<br></code></pre></td></tr></table></figure></li><li><p>avg - 求平均数 - 跳过null值</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> <span class="hljs-keyword">avg</span>(salary) <span class="hljs-keyword">from</span> s_emp;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="limit语句"><a href="#limit语句" class="headerlink" title="limit语句"></a>limit语句</h1><blockquote><p>分页语句</p><ol><li><p>物理分页 - limit</p><p>极端 - 全部使用物理分页 - 造成应用程序和mysql频繁的交互,造成I&#x2F;O比较多.影响性能的.</p></li><li><p>逻辑分页 - 将一部分的数据全部取出来放到内存中,在内存中进行分页</p><p>极端 - 全部使用逻辑分页 - 1000万条 - 占用内存[比较昂贵的资源]</p></li><li><p>真正的使用 - 先物理分页,然后再逻辑分页.</p></li></ol></blockquote><hr><blockquote><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-comment">-- 取出前5条数据</span><br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">limit</span> <span class="hljs-number">5</span>;<br><br><span class="hljs-comment">-- 第一行是0,</span><br><span class="hljs-comment">-- 从第二行开始取,取的3条</span><br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">limit</span> <span class="hljs-number">1</span>,<span class="hljs-number">3</span>;<br><br><span class="hljs-comment">-- 拓展</span><br><span class="hljs-comment">-- 面试问题 - 关于limit的偏移量越大,查询效率是越低的.  limit m,n  m就是偏移量</span><br><br><span class="hljs-comment">-- 解决方案</span><br>大批量的数据分页<br>没有分区之前,所有的数据都在一个区[一个文件中,保存在磁盘里面]<br><br><span class="hljs-number">1.</span> 分区 - 数据就会保存在不同的文件中<br><br><span class="hljs-number">2.</span> 分表 - 水平划分和垂直划分<br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">EmpDao</span>&#123;<br><span class="hljs-comment">//pageNow - 当前页</span><br><span class="hljs-comment">//pageSize - 每页显示的条数</span><br><span class="hljs-function">List&lt;Emp&gt; <span class="hljs-title">find</span>(<span class="hljs-params">Integer pageNow,Integer pageSize</span>)</span>;<br>&#125;<br><br>pageNow , pageSize =&gt; 俩个参数 都会被传入到limit语句中<br><br><span class="hljs-keyword">select</span> * <span class="hljs-function"><span class="hljs-keyword">from</span> s_emp <span class="hljs-title">limit</span> (<span class="hljs-params">pageNow<span class="hljs-number">-1</span></span>)*pageSize,pageSize</span>;<br></code></pre></td></tr></table></figure></blockquote><h1 id="2-分组语句"><a href="#2-分组语句" class="headerlink" title="2. 分组语句"></a>2. 分组语句</h1><blockquote><p>适合做分类统计的业务</p></blockquote><blockquote><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> 语句 <span class="hljs-keyword">from</span> 表<br><span class="hljs-keyword">WHERE</span> 语句<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> 语句<br><span class="hljs-keyword">HAVING</span> 语句<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> 语句<br><span class="hljs-keyword">limit</span>语句<br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><ol><li><p>统计出各个部门的员工的数量</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs axapta">-- s_emp(id,dept_id)<br>-- 根据dept_id进行分类,统计id的数量<br><br>-- 细节<span class="hljs-number">1</span>:如果一个<span class="hljs-keyword">select</span>语句中除了分组函数,还有其他列,那么必须要搭配<span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span>语句<br><span class="hljs-keyword">select</span> dept_id,<span class="hljs-keyword">count</span>(id) <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> dept_id;<br><br>-- 细节<span class="hljs-number">2</span> - 此处的dept_id是否可以省略[<span class="hljs-keyword">select</span>后面的]<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">count</span>(id) <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> dept_id;<br></code></pre></td></tr></table></figure></li><li><p>统计出各个部门的员工的数量,要求显示部门id,name以及员工数量</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">-- ok  - 主键列id列比较特殊 - 一定是非空且唯一的.<br><span class="hljs-keyword">select</span> d.id,d.name,<span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id) <span class="hljs-keyword">from</span> s_emp <span class="hljs-built_in">e</span><br><span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> d.id;<br><br>-- 报错<br><span class="hljs-keyword">select</span> d.id,d.name,<span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id) <span class="hljs-keyword">from</span> s_emp <span class="hljs-built_in">e</span><br><span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> d.name;<br><br>-- 初学者比较推荐,<span class="hljs-keyword">select</span>后面的列(除了分组函数)和<span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span>后面的列高度保持一致即可<br><span class="hljs-keyword">select</span> d.id,d.name,<span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id) <span class="hljs-keyword">from</span> s_emp <span class="hljs-built_in">e</span><br><span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> d.id,d.name;<br></code></pre></td></tr></table></figure></li><li><p>having语句分组之后的过滤,并且是针对组函数的过滤</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">-- 找出员工个数找过2的部门<br><span class="hljs-keyword">select</span> d.id,d.name,<span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id) <span class="hljs-keyword">from</span> s_emp <span class="hljs-built_in">e</span><br><span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> d.id,d.name<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id)&gt;<span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>练习:</p><ol><li><p>统计各个职称(title)的人数</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">title</span>,<span class="hljs-built_in">count</span>(*) <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">title</span>;<br></code></pre></td></tr></table></figure></li><li><p>统计各个区域的id,name以及这个区域上的人数</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> r.id,r.name,<span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id) <span class="hljs-keyword">from</span> s_region r<br><span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> d.region_id = r.id<br><span class="hljs-keyword">join</span> s_emp <span class="hljs-built_in">e</span> <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> r.id,r.name;<br></code></pre></td></tr></table></figure></li><li><p>统计除了’Asia’区域上的员工的数量(数量&#x3D;4的),根据区域id进行降序排</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> r.id,r.name,<span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id) <span class="hljs-keyword">from</span> s_region r<br><span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> d.region_id = r.id<br><span class="hljs-keyword">join</span> s_emp <span class="hljs-built_in">e</span> <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id<br><span class="hljs-keyword">where</span> r.name&lt;&gt;<span class="hljs-string">&#x27;Asia&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> r.id,r.name<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(*)=<span class="hljs-number">4</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-number">1</span> <span class="hljs-keyword">desc</span>;<br></code></pre></td></tr></table></figure></li><li><p>统计各个客户的id,姓名以及这个客户的订单数量,要求没有订单的客户,订单数量显示成0</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">select</span> c.id,c.name,count(o.id) <span class="hljs-keyword">from</span> s_customer c<br><span class="hljs-keyword">left join</span> s_ord o <span class="hljs-keyword">on</span> o.customer_id=c.id<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> c.id;<br><br><span class="hljs-comment">-- 找出下单的客户(订单数不为0)</span><br><span class="hljs-keyword">select</span> c.id,c.name,count(o.id) <span class="hljs-keyword">from</span> s_customer c<br><span class="hljs-keyword">left join</span> s_ord o <span class="hljs-keyword">on</span> o.customer_id=c.id<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> c.id<br><span class="hljs-keyword">having</span> count(o.id)!=<span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure></li><li><p>统计平均工资超过1300的部门</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> dept_id,<span class="hljs-built_in">avg</span>(salary) <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> dept_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">avg</span>(salary)&gt;<span class="hljs-number">1300</span>;<br></code></pre></td></tr></table></figure></li><li><p>统计各个年份入职的人数(年份,员工数量)</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">select <span class="hljs-built_in">year</span>(start_date),<span class="hljs-built_in">count</span>(<span class="hljs-built_in">id</span>) <span class="hljs-keyword">from</span> s_emp group <span class="hljs-keyword">by</span> <span class="hljs-built_in">year</span>(start_date);<br></code></pre></td></tr></table></figure></li><li><p>统计各个年月入职的人数(199106)</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> date_format(start_date,<span class="hljs-string">&#x27;%Y%m&#x27;</span>) st,<span class="hljs-keyword">count</span>(id) <span class="hljs-keyword">from</span> s_emp<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> st;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="3-补充日期和字符串"><a href="#3-补充日期和字符串" class="headerlink" title="3. 补充日期和字符串"></a>3. 补充日期和字符串</h1><blockquote><ol><li>日期转字符串 - date_format(date,pattern)</li><li>字符串转日期 - str_to_date(str,pattern)</li></ol></blockquote><hr><blockquote><p>mysql默认支持自动转换 - 前提的</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> t_date;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_date(<br>id <span class="hljs-type">int</span> <span class="hljs-keyword">primary key</span>,<br><span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>),<br>birthday <span class="hljs-type">date</span><br>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_date <span class="hljs-keyword">values</span>(<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;tom&#x27;</span>,now());<br><br><span class="hljs-comment">-- 插入指定的日期</span><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_date <span class="hljs-keyword">values</span>(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;2023-05-01&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_date <span class="hljs-keyword">values</span>(<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;admin2&#x27;</span>,<span class="hljs-string">&#x27;2023/06/01&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_date <span class="hljs-keyword">values</span>(<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;admin4&#x27;</span>,<span class="hljs-string">&#x27;20230601&#x27;</span>);<br><br><span class="hljs-comment">-- 字符串的格式 - 不支持自动转换的时候,需要使用str_to_date</span><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_date <span class="hljs-keyword">values</span>(<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;admin6&#x27;</span>,<span class="hljs-string">&#x27;06/01 2023&#x27;</span>);<br><br><span class="hljs-comment">-- 字符串转换date类型时候,注意字符的格式需要和后面的模板的格式高度匹配</span><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_date <span class="hljs-keyword">values</span>(<span class="hljs-number">7</span>,<span class="hljs-string">&#x27;admin7&#x27;</span>,str_to_date(<span class="hljs-string">&#x27;06/01 2023&#x27;</span>,<span class="hljs-string">&#x27;%m/%d %Y&#x27;</span>));<br><br><span class="hljs-comment">-- 格式不匹配,转换失败</span><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_date <span class="hljs-keyword">values</span>(<span class="hljs-number">8</span>,<span class="hljs-string">&#x27;admin8&#x27;</span>,str_to_date(<span class="hljs-string">&#x27;06-01 2023&#x27;</span>,<span class="hljs-string">&#x27;%m/%d %Y&#x27;</span>));<br></code></pre></td></tr></table></figure></blockquote><hr><h1 id="4-子查询"><a href="#4-子查询" class="headerlink" title="4. 子查询"></a>4. 子查询</h1><blockquote><p>能用关联查询的就不要使用子查询.子查询嵌套越多,性能越低.</p><p>关联查询的性能问题取决于join表的数量 - 建议单表查询</p></blockquote><blockquote><p>语法: 子查询必须放在()中.</p><ol><li>子查询可以放在条件列中.</li><li>子查询可以作为查询列</li><li>子查询可以作为”虚拟表” - 使用场景多</li></ol></blockquote><hr><blockquote><ol><li><p>找出比’Ben’工资高的员工信息</p><p><code>子查询可以放在条件列中.</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ①找出Ben的工资</span><br><span class="hljs-comment">-- 1100</span><br><span class="hljs-keyword">select</span> salary <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">where</span> first_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Ben&#x27;</span>;<br><br><span class="hljs-comment">--找出工资高于1100的员工</span><br><span class="hljs-keyword">select</span> id,first_name,salary <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">where</span> salary<span class="hljs-operator">&gt;</span><span class="hljs-number">1100</span>;<br><br><span class="hljs-comment">-- 合并一下</span><br><span class="hljs-keyword">select</span> id,first_name,salary <span class="hljs-keyword">from</span> s_emp <br><span class="hljs-keyword">where</span> salary<span class="hljs-operator">&gt;</span>(<span class="hljs-keyword">select</span> salary <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">where</span> first_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Ben&#x27;</span>);<br></code></pre></td></tr></table></figure></li><li><p>查询部门的id,name以及这个部门的员工的个数</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">+----+------------+---------+<br>|<span class="hljs-string"> id </span>|<span class="hljs-string"> first_name </span>|<span class="hljs-string"> dept_id </span>|<br>+----+------------+---------+<br>|<span class="hljs-string">  1 </span>|<span class="hljs-string"> Car_men    </span>|<span class="hljs-string">      50 </span>|<br>|<span class="hljs-string">  2 </span>|<span class="hljs-string"> LaDoris    </span>|<span class="hljs-string">      41 </span>|<br>|<span class="hljs-string">  3 </span>|<span class="hljs-string"> Midori     </span>|<span class="hljs-string">      31 </span>|<br>|<span class="hljs-string">  4 </span>|<span class="hljs-string"> Ma_rk      </span>|<span class="hljs-string">      10 </span>|<br>|<span class="hljs-string">  5 </span>|<span class="hljs-string"> Audry      </span>|<span class="hljs-string">      50 </span>|<br><br>---<br><br><br>+----+----------------+-----------+<br>|<span class="hljs-string"> id </span>|<span class="hljs-string"> name           </span>|<span class="hljs-string"> region_id </span>|<br>+----+----------------+-----------+<br>|<span class="hljs-string"> 50 </span>|<span class="hljs-string"> Administration </span>|<span class="hljs-string">         1 </span>|<br>|<span class="hljs-string"> 10 </span>|<span class="hljs-string"> Finance        </span>|<span class="hljs-string">         1 </span>|<br>|<span class="hljs-string"> 41 </span>|<span class="hljs-string"> Operations     </span>|<span class="hljs-string">         1 </span>|<br>|<span class="hljs-string"> 42 </span>|<span class="hljs-string"> Operations     </span>|<span class="hljs-string">         2 </span>|<br><br>12 rows in set (0.00 sec)<br><br><br>select d.id,d.name,(<br>select count(e.id) from s_emp e where d.id = e.dept_id<br>) count_ from s_dept d;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><ol><li><p>查询部门的id,name以及这个部门的员工的个数 - 无关子查询实现一遍</p><p><code>子查询的查询结果可以作为&quot;虚拟表&quot;</code></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">select e.dept_id,count(e.id) from s_emp e group by e.dept_id;<br><br><span class="hljs-string">&quot;虚拟表&quot;</span> - 子查询的结果<br><br>x<br>+---------+-------------+<br>|<span class="hljs-string"> dept_id </span>|<span class="hljs-string"> count(e.id) </span>|<br>+---------+-------------+<br>|<span class="hljs-string">      10 </span>|<span class="hljs-string">           1 </span>|<br>|<span class="hljs-string">      31 </span>|<span class="hljs-string">           2 </span>|<br>|<span class="hljs-string">      32 </span>|<span class="hljs-string">           1 </span>|<br>|<span class="hljs-string">      33 </span>|<span class="hljs-string">           1 </span>|<br>|<span class="hljs-string">      34 </span>|<span class="hljs-string">           2 </span>|<br>|<span class="hljs-string">      35 </span>|<span class="hljs-string">           1 </span>|<br>|<span class="hljs-string">      41 </span>|<span class="hljs-string">           4 </span>|<br>|<span class="hljs-string">      42 </span>|<span class="hljs-string">           3 </span>|<br>|<span class="hljs-string">      43 </span>|<span class="hljs-string">           3 </span>|<br>|<span class="hljs-string">      44 </span>|<span class="hljs-string">           2 </span>|<br>|<span class="hljs-string">      45 </span>|<span class="hljs-string">           3 </span>|<br>|<span class="hljs-string">      50 </span>|<span class="hljs-string">           2 </span>|<br>+---------+-------------+<br><br>s_dept<br>+----+----------------+-----------+<br>|<span class="hljs-string"> id </span>|<span class="hljs-string"> name           </span>|<span class="hljs-string"> region_id </span>|<br>+----+----------------+-----------+<br>|<span class="hljs-string"> 50 </span>|<span class="hljs-string"> Administration </span>|<span class="hljs-string">         1 </span>|<br>|<span class="hljs-string"> 10 </span>|<span class="hljs-string"> Finance        </span>|<span class="hljs-string">         1 </span>|<br>|<span class="hljs-string"> 41 </span>|<span class="hljs-string"> Operations     </span>|<span class="hljs-string">         1 </span>|<br>|<span class="hljs-string"> 42 </span>|<span class="hljs-string"> Operations     </span>|<span class="hljs-string">         2 </span>|<br>|<span class="hljs-string"> 43 </span>|<span class="hljs-string"> Operations     </span>|<span class="hljs-string">         3 </span>|<br>|<span class="hljs-string"> 44 </span>|<span class="hljs-string"> Operations     </span>|<span class="hljs-string">         4 </span>|<br>|<span class="hljs-string"> 45 </span>|<span class="hljs-string"> Operations     </span>|<span class="hljs-string">         5 </span>|<br>|<span class="hljs-string"> 31 </span>|<span class="hljs-string"> Sales          </span>|<span class="hljs-string">         1 </span>|<br>|<span class="hljs-string"> 32 </span>|<span class="hljs-string"> Sales          </span>|<span class="hljs-string">         2 </span>|<br>|<span class="hljs-string"> 33 </span>|<span class="hljs-string"> Sales          </span>|<span class="hljs-string">         3 </span>|<br>|<span class="hljs-string"> 34 </span>|<span class="hljs-string"> Sales          </span>|<span class="hljs-string">         4 </span>|<br>|<span class="hljs-string"> 35 </span>|<span class="hljs-string"> Sales          </span>|<span class="hljs-string">         5 </span>|<br>+----+----------------+-----------+<br>12 rows in set (0.00 sec)<br><br>select d.id,d.name,x.count_ from s_dept d join (<br>select e.dept_id,count(e.id) count_ from s_emp e group by e.dept_id<br>) x<br>on d.id = x.dept_id;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="子查询的分类"><a href="#子查询的分类" class="headerlink" title="子查询的分类"></a>子查询的分类</h2><blockquote><p>使用原则 - 关联查询&gt;无关子查询&gt;相关子查询</p></blockquote><blockquote><ol><li><p>无关子查询 - 子查询没有使用到外部查询的东西(表,列)</p><p>只要这个子查询拷贝出来之后能够单独执行</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> id,first_name,salary <span class="hljs-keyword">from</span> s_emp <br><span class="hljs-keyword">where</span> salary&gt;(<span class="hljs-keyword">select</span> salary <span class="hljs-keyword">from</span> s_emp <span class="hljs-keyword">where</span> first_name=<span class="hljs-string">&#x27;Ben&#x27;</span>);<br></code></pre></td></tr></table></figure></li><li><p>相关子查询</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> d.id,d.name,(<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-built_in">e</span>.id) <span class="hljs-keyword">from</span> s_emp <span class="hljs-built_in">e</span> <span class="hljs-keyword">where</span> d.id = <span class="hljs-built_in">e</span>.dept_id<br>) count_ <span class="hljs-keyword">from</span> s_dept d;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><blockquote><ol><li>找出平均工资大于公司平均工资的部门</li><li>查询出客户的id,名称,phone以及这个客户的订单数量</li><li>找出和’Ben’同一个部门的员工</li></ol></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>学习第三天</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2023/07/12/test/"/>
    <url>/2023/07/12/test/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>yuketwoday</title>
    <link href="/2023/07/11/yuketwoday/"/>
    <url>/2023/07/11/yuketwoday/</url>
    
    <content type="html"><![CDATA[<h1 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h1><h1 id="1-传统写法"><a href="#1-传统写法" class="headerlink" title="1. 传统写法"></a>1. 传统写法</h1><blockquote><ol><li><p>查找员工的id,first_name以及部门的id,部门的name</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 错误的写法,造成数据的冗余 - 笛卡尔积<br>select e.id,e.first_name,d.id,d.name from s_emp e,s_dept d;<br><br>-- 传统的写法需要通过where来过滤冗余的数据<br>-- SQL - 结构化查询语言 - 非过程化的查询语言 - 面向过程的查询语言.<br>select e.id,e.first_name,d.id,d.name from s_emp e,s_dept d<br>where e.dept_id = d.id;<br><br>-- 碰到一个不会写的sql - 百度... - 答案是传统的写法.<br><br>-- 传统的写法弊端,如果涉及到的表比较多的话.可读性比较差<br>-- 不能够非常清晰看出来哪些表和哪些表之间是存在直接的关系的<br><br>-- 多表查询 - 思考:是任意两张表都是可以这样进行查询???<br>-- 能进行查询的表必然存在直接或者间接的关系的?<br><br>-- 表之间的关系是通过外键列进行维护的<br>-- s_emp(id,first_name,dept_id)<br>-- s_dept(id,name)<br><br>-- s_emp表中的dept_id就是外键列,它是对应s_dept中的主键列id的值的<br><br>-- 如何找到外键列 - 现阶段 - 外键列必然是存在于多的一方的.<br>-- 一个部门拥有多个员工,一个客户拥有多个订单<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>拓展:</p><p>表和表之间的关系</p><ol><li><p>one to one</p><p>user表</p><table><thead><tr><th>id</th><th>username</th><th>password</th><th></th></tr></thead><tbody><tr><td>1</td><td>admin</td><td>123</td><td></td></tr><tr><td>2</td><td>tom</td><td>456</td><td></td></tr></tbody></table><p>userInfo表</p><table><thead><tr><th>id</th><th>headerUrl</th><th>realName</th><th>sex</th><th>user_id</th></tr></thead><tbody><tr><td>1</td><td>xx.png</td><td>王宝强</td><td>M</td><td>2</td></tr><tr><td>2</td><td>x2.png</td><td>马蓉</td><td>F</td><td>1</td></tr></tbody></table><p><code>1:1表关系中,外键列是可以交给其中的任意一方维护的</code></p></li><li><p>one to many(70%)</p></li><li><p>many to many</p><p>一个学生可以选择多门课程,一门课程可以被多个学生来选</p><p>t_student</p><table><thead><tr><th>id</th><th>stuName</th><th></th></tr></thead><tbody><tr><td>1</td><td>james</td><td></td></tr><tr><td>2</td><td>gosling</td><td></td></tr></tbody></table><p>t_course</p><table><thead><tr><th>id</th><th>cname</th><th></th></tr></thead><tbody><tr><td>1</td><td>外语</td><td></td></tr><tr><td>2</td><td>java</td><td></td></tr><tr><td>3</td><td>python</td><td></td></tr><tr><td>4</td><td>vue</td><td></td></tr></tbody></table><p><code>遇到多对多的场景 - 需要拆分成俩个1:N</code></p><p>sc表 - 选课表</p><p>主键列 - 复合&#x2F;组合主键   (sid,cid)</p><table><thead><tr><th>sid</th><th>cid</th><th>score</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>100</td></tr><tr><td>1</td><td>2</td><td>90</td></tr><tr><td>2</td><td>1</td><td>88</td></tr><tr><td>2</td><td>3</td><td>80</td></tr><tr><td></td><td></td><td></td></tr></tbody></table></li><li><p>self to self - 自关联</p><p>t_emp表</p><table><thead><tr><th>id</th><th>name</th><th>manager_id(上司id)</th></tr></thead><tbody><tr><td>1</td><td>王宝强</td><td>4</td></tr><tr><td>2</td><td>羽凡</td><td>4</td></tr><tr><td>3</td><td>贾乃亮</td><td>4</td></tr><tr><td>4</td><td>武大郎</td><td></td></tr></tbody></table><p>外键列是允许为空的</p></li></ol></blockquote><hr><h1 id="2-传统写法练习"><a href="#2-传统写法练习" class="headerlink" title="2. 传统写法练习"></a>2. 传统写法练习</h1><blockquote><ol><li><p>查找员工的名称,该员工所在部门的名称以及该员工所在区域的名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select e.first_name,d.name,r.name from s_emp e,s_dept d,s_region r<br>where e.dept_id = d.id and d.region_id = r.id;<br></code></pre></td></tr></table></figure></li><li><p>找出31部门的名称以及这个这个部门员工的名字和薪资</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select d.id,d.name,e.first_name,e.salary from s_dept d,s_emp e<br>where e.dept_id = d.id and d.id = 31;<br></code></pre></td></tr></table></figure></li><li><p>找出欧洲区域上所有的员工名字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select e.first_name,r.name from s_emp e,s_region r,s_dept d<br>where e.dept_id = d.id and d.region_id = r.id and r.name=&#x27;Europe&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>查询客户的id,名称以及该客户拥有的所有的订单的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select c.id cid,c.name,o.* from s_customer c,s_ord o<br>where c.id = o.customer_id;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="3-关联的写法"><a href="#3-关联的写法" class="headerlink" title="3. 关联的写法"></a>3. 关联的写法</h1><blockquote><ol><li>内联 [inner] join</li><li>**左连接 **left join</li><li>**右连接 **right join</li></ol></blockquote><hr><blockquote><p>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">表A join 表B on 一的一方的主键 = 多的一方的外键<br><br>1. 能够使用join连接的俩张表之间必然要存在直接的关系<br>2. on不能够替代where使用的,on的作用就是用来去除笛卡尔积的.<br></code></pre></td></tr></table></figure><p>查找员工的id,first_name以及部门的id,部门的name</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select e.id,e.first_name,d.id,d.name <br>from s_emp e join s_dept d on e.dept_id = d.id;<br></code></pre></td></tr></table></figure></blockquote><h1 id="4-关联查询的练习"><a href="#4-关联查询的练习" class="headerlink" title="4. 关联查询的练习"></a>4. 关联查询的练习</h1><blockquote><ol><li><p>查找员工的名称,该员工所在部门的名称以及该员工所在区域的名称</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">e</span>.first_name,d.name,r.name <span class="hljs-keyword">from</span> <br>s_emp <span class="hljs-built_in">e</span> <span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id<br><span class="hljs-keyword">join</span> s_region r <span class="hljs-keyword">on</span> r.id = d.region_id<br></code></pre></td></tr></table></figure></li><li><p>找出31部门的名称以及这个这个部门员工的名字和薪资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> d.id,d.name,<span class="hljs-built_in">e</span>.first_name,<span class="hljs-built_in">e</span>.salary <span class="hljs-keyword">from</span> <br>s_emp <span class="hljs-built_in">e</span> <span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> <span class="hljs-built_in">e</span>.dept_id = d.id<br><span class="hljs-keyword">where</span> d.id = <span class="hljs-number">31</span>;<br></code></pre></td></tr></table></figure></li><li><p>找出欧洲区域上所有的员工名字</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> r.name,<span class="hljs-built_in">e</span>.first_name <span class="hljs-keyword">from</span> s_emp <span class="hljs-built_in">e</span><br><span class="hljs-keyword">join</span> s_dept d <span class="hljs-keyword">on</span> d.id = <span class="hljs-built_in">e</span>.dept_id<br><span class="hljs-keyword">join</span> s_region r <span class="hljs-keyword">on</span> r.id = d.region_id<br><span class="hljs-keyword">where</span> r.name=<span class="hljs-string">&#x27;Europe&#x27;</span>;<br></code></pre></td></tr></table></figure></li><li><p>查询客户的id,名称以及该客户拥有的所有的订单的信息</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-keyword">select</span> <span class="hljs-keyword">c</span>.id cid<span class="hljs-punctuation">,</span><span class="hljs-keyword">c</span>.name<span class="hljs-punctuation">,</span>o.* from s_customer <span class="hljs-keyword">c</span> join s_ord o<br>on <span class="hljs-keyword">c</span>.id <span class="hljs-operator">=</span> o.customer_id<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>查询客户的id,名称以及该客户拥有的所有的订单的信息.如果该客户不存在订单,也要能够展示出来.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-comment">-- left join</span><br><span class="hljs-keyword">select</span> c.id cid,c.name,o.* <span class="hljs-keyword">from</span> s_customer c <span class="hljs-keyword">left join</span> s_ord o<br><span class="hljs-keyword">on</span> c.id = o.customer_id;<br><span class="hljs-comment">-- right join</span><br><span class="hljs-keyword">select</span> c.id cid,c.name,o.* <span class="hljs-keyword">from</span> s_ord o <span class="hljs-keyword">right join</span> s_customer c<br><span class="hljs-keyword">on</span> c.id = o.customer_id;<br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><p>练习: 查询出员工的id,first_name以及这个员工的上司的名字</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs applescript">select e1.<span class="hljs-built_in">id</span>,e1.first_name 员工,e2.first_name 上司<br><span class="hljs-keyword">from</span> s_emp e1 join s_emp e2 <span class="hljs-keyword">on</span> e1.manager_id = e2.<span class="hljs-built_in">id</span>;<br><br><span class="hljs-comment">-- 没有上司的员工也要能够被加载出来.</span><br>select e1.<span class="hljs-built_in">id</span>,e1.first_name 员工,e2.first_name 上司<br><span class="hljs-keyword">from</span> s_emp e1 left join s_emp e2 <span class="hljs-keyword">on</span> e1.manager_id = e2.<span class="hljs-built_in">id</span>;<br></code></pre></td></tr></table></figure></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>学习第二天</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+github搭建博客服务器</title>
    <link href="/2023/07/11/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2023/07/11/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="hexo-github搭建博客服务器"><a href="#hexo-github搭建博客服务器" class="headerlink" title="hexo+github搭建博客服务器"></a>hexo+github搭建博客服务器</h1><blockquote><ol><li>csdn,简书,有道笔记 - <strong>广告比较多</strong></li><li>hexo+github[比较慢,翻墙]&#x2F;gitee[Git pages服务器 - 维护]&#x2F;<strong>阿里云服务器</strong></li></ol></blockquote><h1 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h1><blockquote><ol><li>非中文的非特殊字符的目录中[目录中不要出现空格或者带有特殊符号的]</li><li>D:&#x2F;node-v14.17.3-win-x64</li></ol></blockquote><h2 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h2><blockquote><ol><li><p>桌面计算机 - 右击 - 属性 - 高级系统设置 - 环境变量(N)</p></li><li><p>定位到下方的系统变量</p></li><li><p>定位到变量名 - Path - 编辑 - 新建</p></li><li><p>D:&#x2F;node-v14.17.3-win-x64</p></li><li><p>一定要关闭所有的环境变量配置的窗口 - 确定</p></li><li><p>打开终端[如果终端已经打开了,关闭 - 重新打开]</p><p>win[微软图标]+r - 输入cmd  - 输入如下指令检测nodejs是否配置成功</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm -v<br><span class="hljs-number">6</span>.<span class="hljs-number">14</span>.<span class="hljs-number">5</span> 出现版本号,则说明配置成功<br>               <br>如果出现了不是内部或者外部的命令的同学,请检查自己的nodejs解压缩之后的路径是否<br>成功配置到了<span class="hljs-built_in">path</span>中<br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="简单认识npm"><a href="#简单认识npm" class="headerlink" title="简单认识npm"></a>简单认识npm</h2><blockquote><p>npm是javascript的一个**包[前端框架]**管理工具,并且是nodejs平台默认的包管理工具.</p><p>通过npm可以安装,共享,分发代码,管理项目依赖关系.</p><p>类似于java中的maven或者gradle[强大的项目构建工具以及项目依赖管理工具]</p></blockquote><h2 id="npm简单使用"><a href="#npm简单使用" class="headerlink" title="npm简单使用"></a>npm简单使用</h2><h3 id="修改镜像"><a href="#修改镜像" class="headerlink" title="修改镜像"></a>修改镜像</h3><blockquote><p>为了下载速度变快,修改npm的镜像</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>验证一下,镜像是否成功修改了</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm config get registry<br><span class="hljs-function"></span><br><span class="hljs-function">https://<span class="hljs-title">registry.npm.taobao.org</span>/</span><br></code></pre></td></tr></table></figure></blockquote><h2 id="简单使用-不需要操作"><a href="#简单使用-不需要操作" class="headerlink" title="简单使用 - 不需要操作"></a>简单使用 - 不需要操作</h2><blockquote><ol><li><p>下载bootstrap</p><p>npm install 框架名称  - 默认下载的是最新的版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install bootstrap@<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="Hexo官网"><a href="#Hexo官网" class="headerlink" title="Hexo官网"></a>Hexo官网</h1><blockquote><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><ol><li><p>假设你在D盘根目录下新建了一个文件夹hello-hexo[博客项目的根目录]</p></li><li><p>win+r - 打开终端</p></li><li><p>通过dos命令进入到hello-hexo目录中</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">C:/<span class="hljs-title">User</span>/<span class="hljs-title">admin</span>&gt;<span class="hljs-title">d</span>:</span><br><span class="hljs-function"><span class="hljs-title">D</span>:&gt;<span class="hljs-title">cd</span> <span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span></span><br><span class="hljs-function"><span class="hljs-title">D</span>:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>&gt;<span class="hljs-title">npm</span> <span class="hljs-title">install</span> <span class="hljs-title">hexo</span>-<span class="hljs-title">cli</span> -<span class="hljs-title">g</span></span><br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="创建真正的博客目录"><a href="#创建真正的博客目录" class="headerlink" title="创建真正的博客目录"></a>创建真正的博客目录</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>&gt;<span class="hljs-title">hexo</span> <span class="hljs-title">init</span> <span class="hljs-title">hello</span>-<span class="hljs-title">blog</span></span><br></code></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">cd</span> hello-blog<br><span class="hljs-function">D:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">npm</span> <span class="hljs-title">install</span></span><br></code></pre></td></tr></table></figure><h2 id="测试-启动博客服务器"><a href="#测试-启动博客服务器" class="headerlink" title="测试 - 启动博客服务器"></a>测试 - 启动博客服务器</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">hexo</span> <span class="hljs-title">s</span></span><br></code></pre></td></tr></table></figure><p><code>关闭服务器</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">ctrl+c<br></code></pre></td></tr></table></figure><p><em><strong>打开浏览器输入:localhost:4000</strong></em></p><h2 id="常用主题模板"><a href="#常用主题模板" class="headerlink" title="常用主题模板"></a>常用主题模板</h2><blockquote><p><a href="https://blog.csdn.net/zgd826237710/article/details/99671027">https://blog.csdn.net/zgd826237710/article/details/99671027</a></p><p>使用git命令来进行克隆,需要提前安装好git,检测git是否安装成功,<strong>重新打开终端</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">git --version<br></code></pre></td></tr></table></figure></blockquote><h2 id="注册码云账号"><a href="#注册码云账号" class="headerlink" title="注册码云账号"></a>注册码云账号</h2><blockquote><p>推荐用QQ注册一下</p><p>本地配置码云账号信息 - 配置文件 - 位置windows的用户主目录下</p><p>C:&#x2F;User&#x2F;计算机用户名 - 观察是否存在**.gitconfig**文件,添加如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs config">[user]<br>email = 码云的QQ邮箱<br>name = 用户名<br></code></pre></td></tr></table></figure></blockquote><h2 id="安装模板"><a href="#安装模板" class="headerlink" title="安装模板"></a>安装模板</h2><blockquote><p>通过cmd进入到hello-blog目录中的themes目录中</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:/<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">cd</span> <span class="hljs-title">themes</span></span><br><span class="hljs-function"><span class="hljs-title">D</span>://<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>/<span class="hljs-title">themes</span>&gt;<span class="hljs-title">git</span> <span class="hljs-title">clone</span> <span class="hljs-title">https</span>://<span class="hljs-title">gitee.com</span>/<span class="hljs-title">guancg</span>/<span class="hljs-title">hexo</span>-<span class="hljs-title">theme</span>-<span class="hljs-title">pure.git</span></span><br></code></pre></td></tr></table></figure></blockquote><p>或者直接从github上直接clone</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">git clone https://github.com/cofess/hexo-theme-pure.git<br></code></pre></td></tr></table></figure><h1 id="更新主题配置"><a href="#更新主题配置" class="headerlink" title="更新主题配置"></a>更新主题配置</h1><blockquote><ol><li><p>指定新的主题</p><p>hello-blog目录下的_config.yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">theme:</span> <span class="hljs-string">hexo-theme-pure</span><br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="2"><li>重启服务器hexo s</li></ol></blockquote><h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><p>hexo-theme-pure&#x2F;_config.yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">overriden</span><br>  <span class="hljs-attr">author:</span> <span class="hljs-string">亲爱的管管</span><br>  <span class="hljs-attr">author_title:</span> <span class="hljs-string">高级打字员</span><br>  <span class="hljs-attr">author_description:</span> <span class="hljs-string">个人简介。</span><br>  <span class="hljs-attr">location:</span> <span class="hljs-string">SuZhou,</span> <span class="hljs-string">China</span><br></code></pre></td></tr></table></figure><h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><blockquote><p>语法的编辑器 - <a href="https://typora.io/">https://typora.io/</a></p><p>文件的后缀是md</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs txt">常用语法如下:<br><br>1. 标题的语法:<br>1~6标题 - # 一级标题    ## 二级标题   <br><br>2. 代码块 - java,js,mysql...<br><br>​~~~java 敲enter键<br><br>3. 列表<br>3-1. 无序列表<br>     * 列表名称<br>     <br>     有序列表<br>     1. 列表名称<br>     <br>4. 高亮显示<br>   `高亮显示内容`<br>   <br>5. 加粗字体<br>   **粗体**<br>   <br>6. 斜体<br>   *斜体*<br>   <br>7. 粗+斜<br>   ***粗斜***<br>   <br>8. 段落<br>   &gt; 空格<br>   <br>9. 引入外部图片<br>   ![](xx.png)<br>   <br>10. 表格<br></code></pre></td></tr></table></figure></blockquote><h1 id="新建博文"><a href="#新建博文" class="headerlink" title="新建博文"></a>新建博文</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D://<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">hexo</span> <span class="hljs-title">n</span> <span class="hljs-title">java</span></span><br></code></pre></td></tr></table></figure><p>效果:hello-blog目录下的source&#x2F;_ports&#x2F;自动生成一个java.md文件</p><p>重启blog服务器</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D://<span class="hljs-title">hello</span>-<span class="hljs-title">hexo</span>/<span class="hljs-title">hello</span>-<span class="hljs-title">blog</span>&gt;<span class="hljs-title">hexo</span> <span class="hljs-title">s</span></span><br></code></pre></td></tr></table></figure><h1 id="主题的侧边栏"><a href="#主题的侧边栏" class="headerlink" title="主题的侧边栏"></a>主题的侧边栏</h1><blockquote><p>侧边栏的链接生效</p><p>将&#x2F;hello-blog&#x2F;themes&#x2F;hexo-theme-pure&#x2F;_source&#x2F;下的除了_data文件夹,其余文件夹</p><p>拷贝一份放入到hello-blog目录下的source目录中即可</p></blockquote><h1 id="文章的分类和标签"><a href="#文章的分类和标签" class="headerlink" title="文章的分类和标签"></a>文章的分类和标签</h1><blockquote><p>只需要在文章的.md文件的自动生成的头部添加</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">title: java<br>date: 2021-07-13 08:44:42<br>categories: java<br>tags: java<br></code></pre></td></tr></table></figure></blockquote><h1 id="博客的语言环境设置"><a href="#博客的语言环境设置" class="headerlink" title="博客的语言环境设置"></a>博客的语言环境设置</h1><blockquote><p>设置中文</p><p>hello-blog下的_config.yml文件中</p><p>language: zh-CN</p></blockquote><h1 id="图片显示问题"><a href="#图片显示问题" class="headerlink" title="图片显示问题"></a>图片显示问题</h1><blockquote><ol><li><p>安装插件 - npm install <a href="https://gitee.com/guancg/hexo-asset-image.git">https://gitee.com/guancg/hexo-asset-image.git</a> –save</p></li><li><p>需要到hello-blog&#x2F;_config.yml文件中进行配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li><p>hexo n 机器学习</p><p><code>效果就是除了生成了机器学习.md还有一个机器学习文件夹,那么这篇文章的所有的图片就可以存储在机器学习文件夹中</code></p></li><li><p>hexo s</p></li></ol></blockquote><h1 id="内置搜索的功能"><a href="#内置搜索的功能" class="headerlink" title="内置搜索的功能"></a>内置搜索的功能</h1><blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Search</span><br><span class="hljs-attr">search:</span><br><span class="hljs-attr">insight:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># you need to install `hexo-generator-json-content` before using Insight Search</span><br><span class="hljs-attr">baidu:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># you need to disable other search engines to use Baidu search</span><br></code></pre></td></tr></table></figure><p>安装内置搜索插件</p><p>npm i -S hexo-generator-json-content</p></blockquote><h1 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h1><blockquote><p>不需要本地数据库进行存储的,用的是第三方的.</p><p>LeanCloud - 官网地址 - <a href="https://www.leancloud.cn/">https://www.leancloud.cn/</a></p><p>注册 - 登录 - 控制台 - 创建应用 - 右下设置 - 应用凭证</p><p>appId - sljUq97vUAdLAo7XQdf13aFR-gzGzoHsz</p><p>appKey - 3hn4ijEgSzJeRV4nkmXThmGV</p></blockquote><p><code>在hexo-theme-pure\_config.yml文件中配置</code></p><blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">valine:</span> <span class="hljs-comment"># Valine. https://valine.js.org</span><br> <span class="hljs-attr">appid:</span> <span class="hljs-string">sljUq97vUAdLAo7XQdf13aFR-gzGzoHsz</span>  <span class="hljs-comment"># your leancloud application appid</span><br> <span class="hljs-attr">appkey:</span> <span class="hljs-string">3hn4ijEgSzJeRV4nkmXThmGV#</span> <span class="hljs-string">your</span> <span class="hljs-string">leancloud</span> <span class="hljs-string">application</span> <span class="hljs-string">appkey</span><br> <span class="hljs-attr">notify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># mail notifier , https://github.com/xCss/Valine/wiki</span><br> <span class="hljs-attr">verify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Verification code</span><br> <span class="hljs-attr">placeholder:</span> <span class="hljs-string">Just</span> <span class="hljs-string">go</span> <span class="hljs-string">go</span> <span class="hljs-comment"># comment box placeholder</span><br> <span class="hljs-attr">avatar:</span> <span class="hljs-string">mm</span> <span class="hljs-comment"># gravatar style</span><br> <span class="hljs-attr">meta:</span> <span class="hljs-string">nick,mail,link</span> <span class="hljs-comment"># custom comment header</span><br> <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span> <span class="hljs-comment"># pagination size</span><br> <span class="hljs-attr">visitor:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Article reading statistic https://valine.js.org/visitor.html</span><br></code></pre></td></tr></table></figure></blockquote><p>#字数统计&amp;阅读时长</p><blockquote><ol><li><p>npm i -S hexo-wordcount</p></li><li><p>hexo-theme-pure_config.yml文件中配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">postCount:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">wordcount:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 文章字数统计</span><br>  <span class="hljs-attr">min2read:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 阅读时长预计 </span><br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="附件-优秀插件"><a href="#附件-优秀插件" class="headerlink" title="附件-优秀插件"></a>附件-优秀插件</h1><blockquote><ol><li><p>显示图片</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install https://gitee.com/guancg/hexo-asset-image.git --save<br></code></pre></td></tr></table></figure></li><li><p>内置搜索</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm i -S hexo-generator-json-content<br></code></pre></td></tr></table></figure></li><li><p>字数统计&amp;阅读时长</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm i -S hexo-wordcount<br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="4"><li><p>github部署</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="部署github"><a href="#部署github" class="headerlink" title="部署github"></a>部署github</h1><blockquote><p>git config –global user.name “github用户名” </p><p>git config –global user.email “github邮箱”</p></blockquote><blockquote><p>github.com</p></blockquote><blockquote><p>chrome浏览器 + iguge - <a href="https://iguge.app/">https://iguge.app/</a></p></blockquote><blockquote><p>新建的仓库的名称必须是<strong>guancgsuccess.github.io</strong></p><p>仓库地址 - <a href="https://github.com/guancgsuccess/guancgsuccess.github.io.git">https://github.com/guancgsuccess/guancgsuccess.github.io.git</a></p></blockquote><blockquote><p>安装github部署插件.</p><p>npm install hexo-deployer-git –save</p></blockquote><blockquote><p>hello-blog&#x2F;_config.yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;git&#x27;</span><br><span class="hljs-attr">repo:</span> <span class="hljs-string">&#x27;https://github.com/guancgsuccess/guancgsuccess.github.io.git&#x27;</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">&#x27;master&#x27;</span><br></code></pre></td></tr></table></figure></blockquote><p><code>hexo三连操作</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cmd">hexo cl<br>hexo g<br>hexo s<br>hexo d<br></code></pre></td></tr></table></figure><p>浏览器输入 - guancgsuccess.github.io</p>]]></content>
    
    
    
    <tags>
      
      <tag>搭建博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yukeoneday</title>
    <link href="/2023/07/11/yukeoneday/"/>
    <url>/2023/07/11/yukeoneday/</url>
    
    <content type="html"><![CDATA[<h1 id="怎么学习"><a href="#怎么学习" class="headerlink" title="怎么学习"></a>怎么学习</h1><blockquote><ol><li>听懂(100%)</li><li>多看bug - 多看问题</li><li>练打字 - 多敲</li></ol></blockquote><hr><h1 id="人机交互"><a href="#人机交互" class="headerlink" title="人机交互"></a>人机交互</h1><blockquote><ol><li>CLI (Command Line Interface) - 命令行方式 - 需要记忆大量的dos命令,比较繁琐</li><li>GUI(Graphical User Interface) - 用户界面方式 - “傻瓜式操作”</li><li>可执行程序xx.exe文件[C语言编写之后直接编译的程序],如果以后双击它之后,如果闪退,说明计算机告诉你,只能采用CLI</li></ol></blockquote><h1 id="为什么要进行环境变量的配置"><a href="#为什么要进行环境变量的配置" class="headerlink" title="为什么要进行环境变量的配置"></a>为什么要进行环境变量的配置</h1><blockquote><ol><li><p><strong>win+r</strong> - 输入cmd</p><p><code>cmd窗口,dos窗口,黑窗口,终端</code></p></li><li><p>输入命令notepad - 成功唤醒记事本的程序</p><p>接着输入命令 - success - 报错,大概的意思就是<strong>不是系统内部或者外部的命令</strong></p></li><li><p>windows系统执行命令的顺序</p><ul><li><p>优先到当前目录下去查找是否存在这个命令(notepad.exe).</p></li><li><p>如果不存在,继续查找环境变量Path中的路径是否包含这个命令所在的目录</p><p>cmd窗口中输入path - 查找C:\WINDOWS</p></li></ul></li><li><p>到C盘WINDOWS目录中去查找是否存在notepad.exe&#x2F;NOTEPAD.exe</p></li></ol></blockquote><hr><blockquote><p>思考 - 在我们没有对mysql进行环境变量配置之前,想用使用mysql.exe命令???</p><p>只能手动采用dos命令进入到mysql的bin目录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">C:\<span class="hljs-title">User</span>\<span class="hljs-title">admin</span>&gt;<span class="hljs-title">d</span>:</span><br></code></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\&gt;<span class="hljs-title">cd</span> <span class="hljs-title">temp</span></span><br></code></pre></td></tr></table></figure><p><code>cd - change direcotry</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\&gt;<span class="hljs-title">cd</span> <span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span></span><br></code></pre></td></tr></table></figure><p><code>具体的目录名不需要敲全了,敲几个前缀 + tab键</code></p><p>继续进入到终点的目录bin</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>&gt;<span class="hljs-title">cd</span> <span class="hljs-title">bin</span></span><br></code></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;<span class="hljs-title">mysql</span></span><br></code></pre></td></tr></table></figure></blockquote><hr><h1 id="1-安装mysql"><a href="#1-安装mysql" class="headerlink" title="1. 安装mysql"></a>1. 安装mysql</h1><blockquote><p>版本要求:至少是5.7&#x2F;8.x</p></blockquote><blockquote><ol><li><p>官方下载 - <a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p></li><li><p>下载解压缩到一个<code>合法的目录</code></p><blockquote><p>目录名不要带有中文,不要带有特殊符号(Program File(x86))</p></blockquote></li><li><p><strong>进行一个环境变量的配置</strong></p><blockquote><ol><li><p>右击计算机 - 属性 - 高级系统设置 - 环境变量 - 系统变量</p></li><li><p>定位到默认的自带的内置的变量名Path - 编辑 - 新建</p><p>然后将mysql的bin目录的绝对地址拷贝进去即可.</p></li><li><p><strong>以后只要环境变量进行了设置 - 应用 - 确定 - 关闭所有的设置窗口</strong></p><p><strong>一定要重启cmd窗口</strong></p></li><li><p>重新打开cmd - 输入mysql看是否生效</p></li></ol></blockquote></li><li><p>解压之后的目录中新建一个文件my.ini文件</p><p>(注意点: windows - 工具栏 - 显示计算机扩展名&#x2F;后缀名 - 勾选)</p></li><li><p>编辑my.ini文件</p><p><code>唯一需要修改的只有basedir,把它修改成自己的mysql-8.0.32-winx64的绝对地址</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[client]</span><br><span class="hljs-comment"># 设置mysql客户端默认字符集</span><br><span class="hljs-attr">default-character-set</span>=utf8<br>       <br><span class="hljs-section">[mysqld]</span><br><span class="hljs-comment"># 设置3306端口</span><br><span class="hljs-attr">port</span>=<span class="hljs-number">3306</span><br><span class="hljs-comment"># 设置mysql的安装目录</span><br><span class="hljs-attr">basedir</span>=C:\\web\\mysql-<span class="hljs-number">8.0</span>.<span class="hljs-number">11</span><br><span class="hljs-comment"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span><br><span class="hljs-comment"># datadir=C:\\web\\sqldata</span><br><span class="hljs-comment"># 允许最大连接数</span><br><span class="hljs-attr">max_connections</span>=<span class="hljs-number">20</span><br><span class="hljs-comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="hljs-attr">character-set-server</span>=utf8<br><span class="hljs-comment"># 创建新表时将使用的默认存储引擎</span><br><span class="hljs-attr">default-storage-engine</span>=INNODB<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><ol start="6"><li><p>以<strong>管理员身份打开 cmd 命令行工具</strong>，切换目录 - 进入到bin目录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>初始化数据库</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;<span class="hljs-title">mysqld</span> --<span class="hljs-title">initialize</span> --<span class="hljs-title">console</span></span><br></code></pre></td></tr></table></figure><p><code>1. 分配一个默认的密码</code></p><p><code>2. mysql-8.0.32-winx64是否自动生成了data目录</code></p></li><li><p>安装mysqld</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;<span class="hljs-title">mysqld</span> <span class="hljs-title">install</span></span><br></code></pre></td></tr></table></figure><p><code>检测一下mysql的服务是否安装成功</code> - 右击计算机 - 管理 - 服务 - 服务和应用程序 - 右边的窗口 - MYSQL</p><p>只有mysql服务处于正在执行的状态,那么mysql才能够正常使用,建议右击MYSQL属性 - 设置成开机自动启动.</p></li><li><p>启动mysql</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">D:\<span class="hljs-title">temp</span>\<span class="hljs-title">mysql</span>-8.0.32-<span class="hljs-title">winx64</span>\<span class="hljs-title">bin</span>&gt;<span class="hljs-title">net</span> <span class="hljs-title">start</span> <span class="hljs-title">mysql</span></span><br></code></pre></td></tr></table></figure><p><code>mysql服务的运行状态 - 正在运行中</code></p></li><li><p>登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">D:\temp\mysql-8.0.32-winx64\bin&gt;mysql -uroot -p临时密码<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>如果临时密码使用不了</p><ol><li><p>关闭mysql服务关闭</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">重新打开<span class="hljs-built_in">cmd</span><br><span class="hljs-function">C:\<span class="hljs-title">User</span>\<span class="hljs-title">admin</span>&gt;<span class="hljs-title">net</span> <span class="hljs-title">stop</span> <span class="hljs-title">mysql</span></span><br></code></pre></td></tr></table></figure></li><li><p>删除data目录</p></li><li><p>mysqld –initialize –console以及net start mysql再登录.</p></li></ol></blockquote><hr><blockquote><ol start="5"><li><p>直接修改密码即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;root&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>退出mysql登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt;exit<br></code></pre></td></tr></table></figure></li><li><p>重新登录即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql -uroot -proot<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="2-pre-mysql体系"><a href="#2-pre-mysql体系" class="headerlink" title="2-pre.mysql体系"></a>2-pre.mysql体系</h1><blockquote><ol><li><p>sql语句(ddl,dml,dcl,tcl,dql)的使用 - 专门用来操作关系型数据库的.</p><ul><li>互联网项目对sql的要求是降低的 - 基于单表sql开发的模式</li><li>传统行业对sql的要求是高的.</li></ul></li><li><p>视图,存储过程,<strong>索引(B+树)</strong>,事务,函数,表(基本单位),用户 - 数据库的单位&#x2F;对象</p></li><li><p>应用架构</p><ul><li><p>单体架构 - 单台计算机仅仅只有一个mysql节点 - 适合小型的项目</p></li><li><p>主从复制架构 - 至少是2个节点,主节点负责写入,从节点读取.</p><p>难点 - 主从的数据的同步问题 - 适合中小型项目</p></li><li><p>集群 - 适合大型的项目,为了解决三高问题.<em><strong>高性能,高并发,高可用.</strong></em></p></li></ul></li></ol></blockquote><hr><h1 id="2-mysql介绍"><a href="#2-mysql介绍" class="headerlink" title="2. mysql介绍"></a>2. mysql介绍</h1><blockquote><ol><li>mysql属于瑞典的Mysql AB公司的,隶属于Oracle(甲骨文,主打的产品oracle数据库)旗下产品.</li><li>mysql特点 - 体积小,速度快,特别适合中小型企业,开源,免费的.分成社区版和商业版.</li><li>市面上主流的<strong>关系型数据库</strong> - mysql,oracle,sqlserver(MS-微软)</li><li>mysql软件也是采用c&#x2F;c++编写的.</li></ol></blockquote><h1 id="3-专业术语"><a href="#3-专业术语" class="headerlink" title="3. 专业术语"></a>3. 专业术语</h1><blockquote><ol><li><p>DB - database 数据库 - 将数据按照一定的<em><strong>数据结构</strong></em>来进行存储,管理和组织的.</p><p>数据的仓库</p></li><li><p>DBMS - database management system - 数据库管理系统.用于操纵和控制数据库的系统.</p><p>用于建立,使用和维护我们的db. 用户通过dbms来访问db中的数据,dba通过dbms来管理和维护</p><p>我们的db. 使用dbms来保证db的安全性和完整性.</p></li><li><p>RDBMS - relational database management system关系型数据库管理系统 - 负责管理关系型数据库</p></li><li><p>关系型数据库 - 数据呈现的方式是一张二维表[行和列] - 表格型数据库</p></li><li><p>非关系型数据库[nosql] - 键值对数据库redis,文档型数据库mongodb</p></li><li><p>DBS - 数据库系统 - 类似”生态概念</p><p>DBS &#x3D; DB + DBA[数据库管理员] + DBMS</p></li></ol></blockquote><hr><h1 id="4-SQL分类"><a href="#4-SQL分类" class="headerlink" title="4. SQL分类"></a>4. SQL分类</h1><blockquote><p>它同时也是我们的脚本文件的后缀.</p></blockquote><blockquote><p>structured query language结构化查询语言…</p><p>按照功能来划分</p><ol><li><p>DDL - Data Definition Language - 数据定义语言</p><p>create,drop,alter等等…</p></li><li><p>DCL - Data Control Language - 数据控制语言</p><p>grant(授权),revoke(取消权限)等等…</p></li><li><p>DQL - Data Query Languge  - 数据查询语言</p><p><strong>select - 查询</strong></p></li><li><p>DML - Data Manipution Language - 数据操纵语言</p><p><strong>insert,delete,update</strong></p></li><li><p>TCL - Transaction Control Languge - 事务控制语言</p><p>commit,rollback,savepoint等等…</p></li></ol></blockquote><hr><h1 id="mysql的客户端的选择"><a href="#mysql的客户端的选择" class="headerlink" title="mysql的客户端的选择"></a>mysql的客户端的选择</h1><blockquote><ol><li>界面更加友好的话 - navicat导航猫 - 不建议装.</li><li>安装好mysql之后,实际上它会默认安装好mysql-server以及mysql-client</li></ol></blockquote><h1 id="5-体验-导入脚本"><a href="#5-体验-导入脚本" class="headerlink" title="5. 体验 - 导入脚本"></a>5. 体验 - 导入脚本</h1><blockquote><p>mysql是以仓库的方式来管理若干表的.建表之前,需要先创建仓库.并且不同的仓库之间是不可见的.</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">mysql -uroot -proot<br></code></pre></td></tr></table></figure><p><code>查看当前所有的数据库</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show databases;<br></code></pre></td></tr></table></figure><p><code>删除仓库</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop database 数据库名;<br></code></pre></td></tr></table></figure><p><code>创建一个仓库</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create database 数据库名;<br><br>create database yuke;<br></code></pre></td></tr></table></figure><p><code>表一定是放在仓库下的 - 若干张表构建一个db</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 选择db<br><br>use 数据库名<br><br>use yuke<br></code></pre></td></tr></table></figure><p><code>查看一下当前仓库下所有的表</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show tables;<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>导入脚本的两种方式:</p><ol><li><p>source sql脚本文件的绝对地址;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt; source /Users/admin/Documents/success/e/mysql_cn.sql ;<br></code></pre></td></tr></table></figure></li><li><p>手动打开sql脚本 - 复制内容 - 粘贴</p></li></ol></blockquote><hr><h1 id="6-简单查询"><a href="#6-简单查询" class="headerlink" title="6. 简单查询"></a>6. 简单查询</h1><blockquote><p>查询的本质</p><ol><li>到哪里查-查看的是哪张表</li><li>查什么 - 查看的列[数据域Field]</li></ol></blockquote><hr><blockquote><p>客户端的命令 - 查看表的结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">desc 表名<br><br>desc s_emp;<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>每张表都会拥有一个主键列,通常是id列.存在组合主键的情况,主键的特点是用来唯一标识元组[一行]记录的.</p><p>主键列的特点 : 非空且唯一.</p></blockquote><hr><blockquote><p>单表查询语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT 列名 [列别名],列名2 [列别名2] <br>FROM 表名<br>WHERE 条件语句<br>ORDER BY 排序列;<br></code></pre></td></tr></table></figure><p>精简一点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT 列名 [列别名],列名2 [列别名2] <br>FROM 表名;<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>特殊 - 查询所有列,直接用*表示,但是开发中不允许的…</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp;<br></code></pre></td></tr></table></figure><p><code>列比较多的场景</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp \G;<br></code></pre></td></tr></table></figure></blockquote><hr><h2 id="1-列别名"><a href="#1-列别名" class="headerlink" title="1. 列别名"></a>1. 列别名</h2><blockquote><ol><li><p>查看员工的名字和薪资以及入职日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,salary,start_date from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>取别名 - 提高可读性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name 名字,salary 薪资,start_date 入职日期 from s_emp;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name as 名字,salary as 薪资,start_date as 入职日期 from s_emp;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name &quot;名字&quot;,salary &quot;薪资&quot;,start_date &quot;入职日期&quot; from s_emp;<br>   <br>select first_name as &quot;名字&quot;,salary as &quot;薪资&quot;,start_date as &quot;入职日期&quot; from s_emp;<br></code></pre></td></tr></table></figure><p><code>数据库的单行函数 - concat函数 - 表示拼接 - concat(列1,列2,...) - 可变长参数列表</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询员工的姓名(last_name,first_name)<br>select last_name,first_name from s_emp;<br>   <br>-- 仅仅只有1列展示<br>-- db中表示字符串或者字符的永远是单引号.<br>-- db中的双引号是用来包裹格式用的<br>select concat(last_name,&#x27; &#x27;,first_name) &quot;姓 名&quot; from s_emp;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="2-练习"><a href="#2-练习" class="headerlink" title="2. 练习"></a>2. 练习</h2><blockquote><ol><li><p>查看员工的所有的职称title</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select title from s_emp;<br><br>-- 检索出所有的title,包括重复的数据<br>-- 使用关键字distinct来实现去重操作<br>select distinct title from s_emp;<br><br>-- 其他应用<br>-- 分组函数count,统计表中的记录数[行数],重复的数据也算一行(有一个算一个).null值数据不算的.<br>-- 统计title的数量<br>select count(distinct title) from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>查看员工的年薪</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 列是可以参加计算的,但是null值的数据计算的结果还是null值<br>select first_name,salary*12 年薪 from s_emp;<br><br>-- 上面查询出来的年薪不带提成的,需求是带上提成<br>select first_name,salary*12*(1+commission_pct/100) 年薪 from s_emp;<br><br>-- 发现上面查询出来的年薪,如果员工不带提成,计算的结果是null,需要使用mysql的空值置换函数<br>-- coalesce(m,n) 如果m为null则结果是n,否则结果仍然是m<br>-- 类似于java中的if/else  ,  三元操作符  m==null?n:m<br>select first_name,salary*12*(1+coalesce(commission_pct,0)/100) 年薪 from s_emp;<br><br>-- 使用mysql的关于数字的函数truncate或者round<br>-- round(m[,n])  n存在,则代表小数的精度 - 四舍五入<br><br>-- truncate(m,n) n保留的精度,直接截取<br><br>-- 函数都是允许嵌套使用的<br>-- 年薪保留整数位<br>select first_name,truncate(salary*12*(1+coalesce(commission_pct,0)/100),0) 年薪 from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>查看区域表所有的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_region;<br><br>-- Africa / Middle East 非洲/中东<br>-- Asia 亚洲<br>-- Europe 欧洲<br>-- North America   北美<br>-- South America   南美<br><br>case 列名 ... <br>when 列值  then &#x27;新值&#x27;<br>when 列值  then &#x27;新值&#x27;<br>when 列值  then &#x27;新值&#x27;<br>else &#x27;未知值&#x27;<br>end 列别名<br><br>select id,<br>case name<br>when &#x27;Asia&#x27; then &#x27;亚洲&#x27;<br>when &#x27;Europe&#x27; then &#x27;欧洲&#x27;<br>when &#x27;North America&#x27; then &#x27;北美&#x27;<br>else &#x27;未知区域&#x27;<br>end 区域名 from s_region;<br><br>-- 上面的列和when后面的值是精确的匹配,如果是范围匹配<br>-- 查看id,first_name,员工的薪水,薪水的等级<br>-- salary&gt;=1800,高产  如果是[1200,1800) - 中产,低于120 - 无产<br><br>select id,first_name,salary,<br>case <br>when salary&gt;=1800 then &#x27;高产&#x27;<br>when salary&gt;=1200 and salary&lt;1800 then &#x27;中产&#x27;<br>else &#x27;无产&#x27;<br>end &#x27;工资等级&#x27; from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>查看订单的id,总价,支付方式(现金&#x2F;信用卡)以及下单日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select id,total,case payment_type<br>when &#x27;CREDIT&#x27; then &#x27;信用卡&#x27;<br>when &#x27;CASH&#x27; then &#x27;现金&#x27;<br>else &#x27;未知方式&#x27;<br>end 支付方式,date_ordered from s_ord;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="7-作业"><a href="#7-作业" class="headerlink" title="7. 作业"></a>7. 作业</h1><blockquote><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><ol><li><p>instr(str,substr) - 返回字符串substr在字符串str第一次出现的位置(str不包含substr时返回0)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select instr(&#x27;abd&#x27;,&#x27;ef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>lpad(str,len,padstr) - 用字符串padstr填补str左端直到字串长度为len并返回 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT lpad(&#x27;abc&#x27;,5,&#x27;ef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>rpad(str,len,padstr) - 用字符串padstr填补str右端直到字串长度为len并返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select rpad(&#x27;abc&#x27;,5,&#x27;efl&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>left(str,len) - 返回字符串str的左端len个字符 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select left(&#x27;abc&#x27;,2);<br></code></pre></td></tr></table></figure></li><li><p>right(str,len) - 返回字符串str的右端len个字符 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select right(&#x27;abc&#x27;,2);<br></code></pre></td></tr></table></figure></li><li><p>substring(str,pos,len) - 返回字符串str的位置pos起len个字符  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select substring(&#x27;abcdef&#x27;,2,3);<br></code></pre></td></tr></table></figure></li><li><p>substring(str,pos) - 返回字符串str的位置pos起后面的子串 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select substring(&#x27;abcdef&#x27;,3);<br></code></pre></td></tr></table></figure></li><li><p>ltrim(str) - 返回删除了左空格的字符串str  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ltrim(&#x27;abcdef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>rtrim(str)  - 返回删除了右空格的字符串str  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select rtrim(&#x27;abcdef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>space(n) - 返回由n个空格字符组成的一个字符串 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select space(&#x27;    &#x27;);<br></code></pre></td></tr></table></figure></li><li><p><em><strong>replace(str,from_str,to_str)  - 用字符串to_str替换字符串str中的子串from_str并返回</strong></em> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select replace(&#x27;abcdef&#x27;,&#x27;&#x27;,&#x27;de&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>reverse(str) - 颠倒字符串str的字符顺序并返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select reverse(&#x27;abcde&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>insert(str,pos,len,newstr) - 把字符串str由位置pos起len个字符长的子串替换为字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select insert(&#x27;abcde&#x27;,2,3,&#x27;fg&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>lower(str) - 返回小写的字符串str  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select lower(&#x27;AbCdE&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>upper(str) - 返回大写的字符串str</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select upper(&#x27;AbCdE&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>char_length(str) -  不管汉字还是数字或者是字母都算是一个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select char_length(&#x27;abcdef&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>length(str);&#x2F;&#x2F;汉字占3个,其他占1个.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select length(&#x27;穆星宇s&#x27;);<br></code></pre></td></tr></table></figure><p>用上面的字符串函数实现 - 模拟银行账户的输出方式.</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">比如Carmen,显示成C*****<br>Mark,M***<br><br>方法一:<br><span class="hljs-keyword">select</span> first_name,rpad(substring(first_name,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),char_length(first_name),<span class="hljs-string">&#x27;*&#x27;</span>) <span class="hljs-keyword">from</span> s_emp;<br><br>方法二:<br><span class="hljs-keyword">select</span> first_name,concat(substring(first_name,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),rpad(<span class="hljs-string">&#x27;*&#x27;</span>,char_length(first_name)<span class="hljs-number">-1</span>,<span class="hljs-string">&#x27;*&#x27;</span>)) <span class="hljs-keyword">from</span> s_emp;<br><br>方法三:<br><span class="hljs-keyword">select</span> first_name,replace(first_name,substring(first_name,<span class="hljs-number">2</span>),rpad(<span class="hljs-string">&#x27;*&#x27;</span>,char_length(first_name)<span class="hljs-number">-1</span>,<span class="hljs-string">&#x27;*&#x27;</span>))<br><span class="hljs-keyword">from</span> s_emp;<br><br>方法四:<br><span class="hljs-keyword">select</span> first_name,<span class="hljs-keyword">insert</span>(first_name,<span class="hljs-number">2</span>,char_length(first_name)<span class="hljs-number">-1</span>,rpad(<span class="hljs-string">&#x27;*&#x27;</span>,char_length(first_name)<span class="hljs-number">-1</span>,<span class="hljs-string">&#x27;*&#x27;</span>)) <span class="hljs-keyword">from</span> s_emp;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><h2 id="数字函数"><a href="#数字函数" class="headerlink" title="数字函数"></a>数字函数</h2><ol><li><p>abs(n) - 求绝对值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select abs(-10);<br></code></pre></td></tr></table></figure></li><li><p>mod(n,m) - 取模运算,返回n被m除的余数(同%操作符)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select mod(10,3);<br></code></pre></td></tr></table></figure></li><li><p><strong>floor(n) - 返回不大于n的最大整数值</strong> - 向下取整  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select floor(6.66);<br></code></pre></td></tr></table></figure></li><li><p><strong>ceiling(n) - 返回不小于n的最小整数值</strong>  - 向上取整 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select ceiling(6.66);<br></code></pre></td></tr></table></figure></li><li><p>round(n[,d]) - 返回n的四舍五入值,保留d位小数(d的默认值为0)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select round(2.226[,2]);<br></code></pre></td></tr></table></figure></li><li><p>pow(x,y) - 返回值x的y次幂 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select pow(2,3);<br></code></pre></td></tr></table></figure></li><li><p>sqrt(n) - 返回非负数n的平方根</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select sqrt(9);<br></code></pre></td></tr></table></figure></li><li><p>pi() - 返回圆周率  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select pi();<br></code></pre></td></tr></table></figure></li><li><p>rand() - 返回在范围[0到1.0)内的随机浮点值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select rand();<br></code></pre></td></tr></table></figure></li><li><p>truncate(n,d) - 保留数字n的d位小数并返回  - 直接截取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select truncate(2.222,2);<br></code></pre></td></tr></table></figure><p>练习:</p><p>每次输出,只输出[1,100]之间的随机整数.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select floor(rand()*100+1);<br><br>-- [3,5]之间的随机整数<br>select floor(rand()*3+3);<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><p>查询当前系统的日期 - select now();</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select now();<br></code></pre></td></tr></table></figure><ol><li><p>dayofweek(date) - 返回日期date是星期几(1&#x3D;星期天,2&#x3D;星期一,……7&#x3D;星期六,odbc标准)  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select dayofweek(now());<br></code></pre></td></tr></table></figure></li><li><p>weekday(date) - 返回日期date是星期几(0&#x3D;星期一,1&#x3D;星期二,……6&#x3D; 星期天)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select weekday(now());<br></code></pre></td></tr></table></figure></li><li><p>year(date) - 返回date的年份(范围在1000到9999) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select year(now());<br></code></pre></td></tr></table></figure></li><li><p>month(date)  - 返回date中的月份数值 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select month(now());<br></code></pre></td></tr></table></figure></li><li><p>dayofmonth(date) - 返回date是一月中的第几日(在1到31范围内) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select dayofmonth(now());<br></code></pre></td></tr></table></figure></li><li><p>hour(time) - 返回time的小时数(范围是0到23)  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select hour(now());<br></code></pre></td></tr></table></figure></li><li><p>minute(time) - 返回time的分钟数(范围是0到59) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select minute(now());<br></code></pre></td></tr></table></figure></li><li><p>second(time) - 返回time的秒数(范围是0到59) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select second(now());<br></code></pre></td></tr></table></figure></li><li><p>period_add(p,n) - 增加n个月到时期p并返回(p的格式’yymm’或’yyyymm’) </p><p>mysql&gt;select period_add(‘202008’,3) ;</p><p>注意:p可以是字符串,一定要满足一定的格式,或者可以直接使用date类型.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select period_add(&#x27;202307&#x27;,3);<br></code></pre></td></tr></table></figure></li><li><p>period_diff(p1,p2) - 返回在时期p1和p2之间月数(p1和p2的格式yymm或yyyymm)  p1-p2</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select period_diff(&#x27;202312&#x27;,&#x27;202307&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>curdate() - 以’yyyy-mm-dd’或yyyymmdd格式返回当前日期值(根据返回值所处上下文是字符串或数字) </p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select curdate();<br></code></pre></td></tr></table></figure></li><li><p>curtime() - 以’hh:mm:ss’或hhmmss格式返回当前时间值(根据返回值所处上下文是字符串或数字)</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select curtime();<br></code></pre></td></tr></table></figure></li><li><p>now() - 以’yyyy-mm-dd hh:mm:ss’或yyyymmddhhmmss格式返回当前日期时间(根据返回值所处上下文是字符串或数字)</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select now();<br></code></pre></td></tr></table></figure><p>  ​     </p></li><li><p>last_day(date) - date日期所在月的最后一天是什么时候</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select last_day(&#x27;20230710&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>datediff(d1,d2) - 两个日期d1,d2之间相差的天数</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select datediff(&#x27;20230731&#x27;,&#x27;20230710&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>timestampdiff(type,d1,d2) - type是YEAR,d1和d2相差的年份,MONTH,月份</p><p>  d1,d2 - yyyymmdd</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select timestampdiff(year,&#x27;20180701&#x27;,&#x27;20230710&#x27;);<br></code></pre></td></tr></table></figure><p>  日期函数补充</p><blockquote><ul><li>date_add(date,interval expr type)</li><li>date_sub(date,interval expr type)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">type:<br>year<br>month<br>day<br>hour<br>minute<br>second<br><br>select date_add(now(),interval 1 year);<br>-- 输出一年前的此刻,当前,一年之后的此刻<br>select date_add(now(),interval -12 month);<br>select date_sub(now(),interval 1 year);<br></code></pre></td></tr></table></figure></blockquote><p>日期格式化</p><blockquote><p>date_format(date,formatPattern)</p><p>将指定的日期格式化成对应模板的字符串 - 涉及到date类型和字符串类型之间的相互转换的问题.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs mysql">根据format字符串格式化date值  <br>　(在format字符串中可用标志符:  <br>　%m 月名字(january……december)    <br>　%w 星期名字(sunday……saturday)    <br>　%d 有英语前缀的月份的日期(1st, 2nd, 3rd, 等等。）    <br>　%Y 年, 数字, 4 位    <br>　%y 年, 数字, 2 位    <br>　%a 缩写的星期名字(sun……sat)    <br>　%d 月份中的天数, 数字(00……31)    <br>　%e 月份中的天数, 数字(0……31)    <br>　%m 月, 数字(01……12)    <br>　%c 月, 数字(1……12)    <br>　%b 缩写的月份名字(jan……dec)    <br>　%j 一年中的天数(001……366)    <br>　%H 24时制小时(00……23)    <br>　%k 小时(0……23)    <br>　%h 12时小时(01……12)    <br>　%i 小时(01……12)    <br>　%l 小时(1……12)    <br>　%i 分钟, 数字(00……59)    <br>　%r 时间,12 小时(hh:mm:ss [ap]m)    <br>　%t 时间,24 小时(hh:mm:ss)    <br>　%s 秒(00……59)       <br>　%p am或pm    <br>　%w 一个星期中的天数(0=sunday ……6=saturday ）        <br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select date_format(now(),&#x27;%Y年%m月%d日 %H时%i分%s秒&#x27;);<br></code></pre></td></tr></table></figure></blockquote></li></ol><hr></blockquote><h1 id="8-条件查询"><a href="#8-条件查询" class="headerlink" title="8. 条件查询"></a>8. 条件查询</h1><blockquote><p>什么是表达式 &#x3D; 由字面量或者变量以及运算符组成的合法的语句</p><p>字面量 - 字面的意思 - 常量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">int i = 10;<br>int result = i+100;<br></code></pre></td></tr></table></figure></blockquote><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select 语句<br>where 条件表达式<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">&gt; &lt; = != &lt;&gt;  &gt;= &lt;=<br></code></pre></td></tr></table></figure><p>条件连接符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">and 连接多个条件的,都是true,返回结果行<br><br>or 只要存在一个为true的条件,则返回结果行<br></code></pre></td></tr></table></figure></blockquote><blockquote><p>其他运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">between m and n       返回某列值在[m,n]之间<br><br>in(列表)  某列的值是否存在于(值1,值2,值3)  之间是一个或者的关系<br><br>not in(列表) 不在某个范围<br><br>is null 判断是否为空,mysql中不要使用=null<br><br>is not null 判断不为空  ,不要使用!=null<br></code></pre></td></tr></table></figure></blockquote><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><blockquote><ol><li><p>查询出有提成的员工的名字和提成率以及薪资</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,salary,commission_pct from s_emp where commission_pct is not null;<br></code></pre></td></tr></table></figure></li><li><p>把31部门,41部门以及42部门的员工全部找出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,dept_id from s_emp where dept_id in(31,41,42);<br>   <br>select first_name,dept_id from s_emp where dept_id=31 or dept_id=41 or dept_id=42;<br>   <br>-- 员工的名称以及员工所在的部门的名称<br>-- 涉及到多表查询<br>select e.first_name 员工,(<br>select d.name from s_dept d where e.dept_id = d.id<br>) 部门名 from s_emp e;<br>   <br>-- 翻译成for循环<br>for(int i=0;i&lt;25;i++)&#123;<br>for(int j=0;j&lt;12;j++)&#123;<br>  if(..)&#123;<br>        //直接输出<br>        Sytem.out.println(i+&quot;:&quot;+j);<br>    &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol></blockquote><h1 id="9-课堂练习"><a href="#9-课堂练习" class="headerlink" title="9. 课堂练习"></a>9. 课堂练习</h1><blockquote><ol><li><p>查出在41部门的员工名字,工资</p></li><li><p>查出工资高于1500的员工的信息</p></li><li><p>找出工资大于1200元的员工全名、工资、职称</p></li><li><p>找出工资在1200到1500之间的员工名</p></li><li><p>找出工资大于1500并且没有提成的员工</p></li><li><p>找出名字长度超过5的员工</p></li><li><p>找出员工的工作月数</p></li><li><p>查询员工的工作天数</p></li><li><p>当前日期前六个月的最后一天</p></li><li><p><strong>把员工的入职日期格式化为年&#x2F;月&#x2F;日</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,date_format(start_date,&#x27;%Y/%m/%d&#x27;) from s_emp;<br></code></pre></td></tr></table></figure></li><li><p>找出5月份入职的员工</p></li><li><p><strong>查出名字是以M打头的员工</strong></p></li><li><p><strong>查出姓名中第三个字母是e的员工</strong></p></li><li><p>找出费用超过10000元的订单编号及支付方式</p></li><li><p><strong>找出名字first_name中含有字母a的员工</strong></p></li></ol></blockquote><hr><h1 id="10-模糊查询"><a href="#10-模糊查询" class="headerlink" title="10. 模糊查询"></a>10. 模糊查询</h1><blockquote><ol><li>like - 匹配任意<strong>多个</strong>任意字符(包括0个)</li><li>_ 匹配任意<strong>单个</strong>字符</li></ol></blockquote><hr><blockquote><ol><li><p>找出名字first_name中含有字母e的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp where first_name like &#x27;%e%&#x27;;<br></code></pre></td></tr></table></figure></li><li><p><strong>查出名字是以M打头的员工</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp where first_name like &#x27;M%&#x27;;<br></code></pre></td></tr></table></figure></li><li><p><strong>查出姓名中第三个字母是e的员工</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from s_emp where first_name like &#x27;__e%&#x27;;<br></code></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol><li><p>查找6月份入职的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name,start_date from s_emp where start_date like &#x27;%-06-%&#x27;;<br><br>-- 推荐使用日期函数<br>select first_name,start_date from s_emp where month(start_date) = 6;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><blockquote><p>拓展: 使用转义字符\</p><p>场景: 万一first_name本身的值就包含_或者%</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update s_emp set first_name=&#x27;Car_men&#x27; where id=1;<br>update s_emp set first_name=&#x27;Ma_rk&#x27; where id = 4;<br></code></pre></td></tr></table></figure><p>需求:查询出first_name中包含_的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select first_name from s_emp where first_name like &#x27;%\_%&#x27;;<br><br>-- 补充,可以使用escape来定义一个临时的转义字符的<br>select first_name from s_emp where first_name like &#x27;%?_%&#x27; escape &#x27;?&#x27;;<br></code></pre></td></tr></table></figure></blockquote><hr><h1 id="11-排序"><a href="#11-排序" class="headerlink" title="11. 排序"></a>11. 排序</h1><blockquote><ol><li><p>升序</p><p>order by 排序列 [asc]</p></li><li><p>降序</p><p>order by 排序列 desc</p></li></ol></blockquote><blockquote><p>排序不建议使用的,真实开发中,还是推荐使用java排序的.</p><ol><li><p><strong>自动排序 - 插入的时候根据索引自动排序</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop table t_ord;<br>create table t_ord(<br>  -- 主键列默认就是索引列 - 主键索引<br>id int primary key,<br>  name varchar(20)<br>);<br>-- insert插入数据<br>insert into t_ord values(2,&#x27;tom&#x27;);<br>insert into t_ord values(1,&#x27;admin&#x27;);<br></code></pre></td></tr></table></figure></li><li><p>根据工资进行排序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- order by 具体的列名<br>select first_name,salary from s_emp order by salary;<br><br>select first_name,salary from s_emp order by salary desc;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- order by 列别名<br>select first_name,salary sal_ from s_emp order by sal_;<br><br>select first_name,salary*12*(1+coalesce(commission_pct,0)/100) yearSal_ from s_emp<br>order by yearSal_;<br><br>-- 比较推荐的方式 - 排序性能得到优化的一种<br>-- order by 列的序号 - 序号从1开始<br>select first_name,salary*12*(1+coalesce(commission_pct,0)/100) 年薪 from s_emp<br>order by 2 desc;<br><br>-- 优先按照年薪降序排,如果年薪一致的时候,希望继续按照first_name升序排<br>select first_name,salary*12*(1+coalesce(commission_pct,0)/100) 年薪 from s_emp<br>order by 2 desc,1;<br></code></pre></td></tr></table></figure></li></ol></blockquote><hr><h1 id="12-数字和字符串之间的转换"><a href="#12-数字和字符串之间的转换" class="headerlink" title="12. 数字和字符串之间的转换"></a>12. 数字和字符串之间的转换</h1><blockquote><ol><li><p>字符串转数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- +是java中唯一重载[具备多个意义]的运算符<br><br>-- 将字符串转换成数字,然后进行加法运算<br>select &#x27;1&#x27;+0;<br></code></pre></td></tr></table></figure></li><li><p>数字转字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">concat函数<br>select concat(1,&#x27;&#x27;);<br></code></pre></td></tr></table></figure></li></ol></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>学习的第一天</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown</title>
    <link href="/2023/07/11/Markdown%E8%AF%AD%E6%B3%95/"/>
    <url>/2023/07/11/Markdown%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>markdown</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><blockquote><p>竖线大于号+空格</p><p>有序列表</p><ol><li>数字加点加空格</li><li></li></ol></blockquote><hr><blockquote><p>无序列表</p><ul><li>星号空格</li></ul></blockquote><hr><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">三个波浪线加语言名称写代码<br></code></pre></td></tr></table></figure></blockquote><hr><blockquote><p>插入表格–CTRL+t</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table></blockquote><hr><blockquote><p><strong>加粗左右各两个星号</strong></p></blockquote><hr><blockquote><p><code>高亮显示</code></p></blockquote><hr><blockquote><p><em>左右各一个星号斜体</em></p></blockquote><hr><blockquote><p><img src="C:/Users/18047/Desktop/java/imag/图片路劲">导入图片</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java</title>
    <link href="/2023/07/10/java/"/>
    <url>/2023/07/10/java/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/10/hello-world/"/>
    <url>/2023/07/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
